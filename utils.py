#!/usr/bin/env python3
# -*- coding: utf-8 -*-

"""
utils.py ‚Äì –≤—Å–ø–æ–º–æ–≥–∞—Ç–µ–ª—å–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏ –∏ –∫–æ–Ω—Å—Ç–∞–Ω—Ç—ã
"""

from __future__ import annotations
import math, random, logging, requests, pendulum
from typing import Any, Dict

# ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ
#  –ö–æ–º–ø–∞—Å, –æ–±–ª–∞—á–Ω–æ—Å—Ç—å, –≤–µ—Ç–µ—Ä
# ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ
COMPASS = [
    "N","NNE","NE","ENE","E","ESE","SE","SSE",
    "S","SSW","SW","WSW","W","WNW","NW","NNW"
]

def compass(deg: float) -> str:
    """–ß–∏—Å–ª–æ–≤–æ–π —É–≥–æ–ª 0‚Äì360¬∞ ‚Üí –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ N/NE/E‚Ä¶"""
    return COMPASS[int((deg / 22.5) + .5) % 16]

def clouds_word(pc: int) -> str:
    """%-–æ–±–ª–∞—á–Ω–æ—Å—Ç–∏ ‚Üí ¬´—è—Å–Ω–æ¬ª / ¬´–ø–µ—Ä–µ–º–µ–Ω–Ω–∞—è¬ª / ¬´–ø–∞—Å–º—É—Ä–Ω–æ¬ª"""
    return "—è—Å–Ω–æ" if pc < 25 else "–ø–µ—Ä–µ–º–µ–Ω–Ω–∞—è" if pc < 70 else "–ø–∞—Å–º—É—Ä–Ω–æ"

def wind_phrase(km_h: float) -> str:
    """–°–∫–æ—Ä–æ—Å—Ç—å –≤–µ—Ç—Ä–∞ ‚Üí —Å–ª–æ–≤–µ—Å–Ω–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ"""
    return (
        "—à—Ç–∏–ª—å"     if km_h < 2   else
        "—Å–ª–∞–±—ã–π"    if km_h < 8   else
        "—É–º–µ—Ä–µ–Ω–Ω—ã–π" if km_h < 14  else
        "—Å–∏–ª—å–Ω—ã–π"
    )

def safe(v: Any, unit: str = "") -> str:
    """None ‚Üí ¬´‚Äî¬ª, —á–∏—Å–ª–æ ‚Üí ¬´x.y unit¬ª, –ø—Ä–æ—á–µ–µ ‚Üí str(value)"""
    if v in (None, "None", "‚Äî"):  return "‚Äî"
    if isinstance(v, (int, float)): return f"{v:.1f}{unit}"
    return f"{v}{unit}"

# ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ
#  AQI ‚Üí —ç–º–æ–¥–∑–∏ + —É—Ä–æ–≤–µ–Ω—å
# ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ
AQI_LEVELS: list[tuple[int, int, str]] = [
    (  0,  50, "—Ö–æ—Ä–æ—à–∏–π"),
    ( 51, 100, "—É–º–µ—Ä–µ–Ω–Ω—ã–π"),
    (101, 150, "–≤—Ä–µ–¥–Ω—ã–π"),
    (151, 200, "–æ—á. –≤—Ä–µ–¥–Ω—ã–π"),
    (201, 500, "–æ–ø–∞—Å–Ω—ã–π"),
]
AIR_EMOJI = {
    "—Ö–æ—Ä–æ—à–∏–π":     "üü¢",
    "—É–º–µ—Ä–µ–Ω–Ω—ã–π":   "üü°",
    "–≤—Ä–µ–¥–Ω—ã–π":     "üü†",
    "–æ—á. –≤—Ä–µ–¥–Ω—ã–π": "üî¥",
    "–æ–ø–∞—Å–Ω—ã–π":     "üü£",
    "–Ω/–¥":         "‚ö™",
}

def aqi_color(aqi: int|float|str) -> str:
    """–í–µ—Ä–Ω—ë—Ç –Ω–∞–∑–≤–∞–Ω–∏–µ —É—Ä–æ–≤–Ω—è (—Ö–æ—Ä–æ—à–∏–π/‚Ä¶/–æ–ø–∞—Å–Ω—ã–π)"""
    try:
        val = float(aqi)
    except (TypeError, ValueError):
        return "–Ω/–¥"
    for low, high, name in AQI_LEVELS:
        if low <= val <= high:
            return name
    return "–æ–ø–∞—Å–Ω—ã–π"

# ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ
#  ¬´–§–∞–∫—Ç –¥–Ω—è¬ª
# ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ
FACTS: Dict[str, str] = {
    "05-11": "11 –º–∞—è ‚Äî –î–µ–Ω—å –º–æ—Ä—Å–∫–æ–≥–æ –±—Ä–∏–∑–∞ –Ω–∞ –ö–∏–ø—Ä–µ üå¨Ô∏è",
    "06-08": "8 –∏—é–Ω—è 2004 –≥. ‚Äî —Ç—Ä–∞–Ω–∑–∏—Ç –í–µ–Ω–µ—Ä—ã –ø–æ –°–æ–ª–Ω—Ü—É üåû",
    "07-20": "20 –∏—é–ª—è ‚Äî –Ω–∞ –ö–∏–ø—Ä–µ —Å–æ–±–∏—Ä–∞—é—Ç –ø–µ—Ä–≤—ã–π —É—Ä–æ–∂–∞–π –≤–∏–Ω–æ–≥—Ä–∞–¥–∞ üçá",
}

def get_fact(date_obj: pendulum.Date) -> str:
    return FACTS.get(date_obj.format("MM-DD"),
                     "–ù–∞ –ö–∏–ø—Ä–µ –≤ –≥–æ–¥—É ‚âà340 —Å–æ–ª–Ω–µ—á–Ω—ã—Ö –¥–Ω–µ–π ‚òÄÔ∏è")

# ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ
#  –ü–∏–∫—Ç–æ–≥—Ä–∞–º–º—ã
# ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ
WEATHER_ICONS = {
    "—è—Å–Ω–æ":       "‚òÄÔ∏è",
    "–ø–µ—Ä–µ–º–µ–Ω–Ω–∞—è": "üå§Ô∏è",
    "–ø–∞—Å–º—É—Ä–Ω–æ":   "‚òÅÔ∏è",
    "–¥–æ–∂–¥—å":      "üåßÔ∏è",
    "—Ç—É–º–∞–Ω":      "üåÅ",
}

# ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ
#  WMO weather-code ‚Üí –∫—Ä–∞—Ç–∫–æ–µ —Ä—É—Å—Å–∫–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ
#  (–∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –≤ post.py –¥–ª—è —Å—Ç—Ä–æ–∫–∏ ¬´–ú–∞–∫—Å. WMO-–∫–æ–¥: ‚Ä¶¬ª)
# ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ
WMO_DESCRIPTIONS: dict[int, str] = {
    0:  "–Ø—Å–Ω–æ",
    1:  "–ü—Ä–µ–∏–º. —è—Å–Ω–æ",
    2:  "–ü–µ—Ä–µ–º–µ–Ω–Ω–∞—è –æ–±–ª–∞—á–Ω–æ—Å—Ç—å",
    3:  "–ü–∞—Å–º—É—Ä–Ω–æ",

    45: "–¢—É–º–∞–Ω",
    48: "–¢—É–º–∞–Ω, –∏–Ω–µ–π",

    51: "–ú–æ—Ä–æ—Å—å —Å–ª–∞–±–∞—è",
    53: "–ú–æ—Ä–æ—Å—å —É–º–µ—Ä–µ–Ω–Ω–∞—è",
    55: "–ú–æ—Ä–æ—Å—å —Å–∏–ª—å–Ω–∞—è",

    61: "–î–æ–∂–¥—å —Å–ª–∞–±—ã–π",
    63: "–î–æ–∂–¥—å —É–º–µ—Ä–µ–Ω–Ω—ã–π",
    65: "–î–æ–∂–¥—å —Å–∏–ª—å–Ω—ã–π",

    71: "–°–Ω–µ–≥ —Å–ª–∞–±—ã–π",
    73: "–°–Ω–µ–≥ —É–º–µ—Ä–µ–Ω–Ω—ã–π",
    75: "–°–Ω–µ–≥ —Å–∏–ª—å–Ω—ã–π",

    80: "–õ–∏–≤–Ω–∏ —Å–ª–∞–±—ã–µ",
    81: "–õ–∏–≤–Ω–∏ —É–º–µ—Ä–µ–Ω–Ω—ã–µ",
    82: "–õ–∏–≤–Ω–∏ —Å–∏–ª—å–Ω—ã–µ",

    95: "–ì—Ä–æ–∑–∞",
    96: "–ì—Ä–æ–∑–∞ —Å –≥—Ä–∞–¥–æ–º",
    99: "–°–∏–ª—å–Ω–∞—è –≥—Ä–æ–∑–∞ —Å –≥—Ä–∞–¥–æ–º",
}

# ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ
#  –£–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω—ã–π HTTP-–≥–µ—Ç—Ç–µ—Ä —Å –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ–º
# ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ
def _get(url: str, **params) -> dict | None:
    """GET-–∑–∞–ø—Ä–æ—Å ‚Üí JSON | None (—Å –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ–º –æ—à–∏–±–æ–∫)"""
    try:
        r = requests.get(
            url,
            params=params,
            timeout=15,
            headers={"User-Agent": "VayboMeter/6.0"},
        )
        r.raise_for_status()
        return r.json()
    except Exception as e:
        host = url.split("/")[2]
        logging.warning("%s ‚Äì %s", host, e)
        return None
