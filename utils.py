#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
0‚Äì1. UTILS MODULE
‚Ä¢ –£—Ç–∏–ª–∏—Ç—ã –¥–ª—è –ø—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏—è –∏ —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —Ä–∞–∑–Ω—ã—Ö –ø–æ–∫–∞–∑–∞—Ç–µ–ª–µ–π
‚Ä¢ –ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã –¥–ª—è –∏–∫–æ–Ω–æ–∫ –ø–æ–≥–æ–¥—ã –∏ –∫–∞—á–µ—Å—Ç–≤–∞ –≤–æ–∑–¥—É—Ö–∞
"""
import math
import logging
from typing import Union
import pendulum

# ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ CONSTANTS ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ
WEATHER_ICONS: dict[str, str] = {
    "—è—Å–Ω–æ":       "‚òÄÔ∏è",
    "–ø–µ—Ä–µ–º–µ–Ω–Ω–∞—è": "üå§Ô∏è",
    "–ø–∞—Å–º—É—Ä–Ω–æ":   "‚òÅÔ∏è",
    "–¥–æ–∂–¥—å":      "üåßÔ∏è",
    "—Ç—É–º–∞–Ω":      "üåÅ",
}

AIR_EMOJI: dict[str, str] = {
    # –£—Ä–æ–≤–Ω–∏ –ø–æ US-EPA ‚Üí –∫—Ä—É–∂–∫–∏-—ç–º–æ–¥–∑–∏
    "—Ö–æ—Ä–æ—à–∏–π":       "üü¢",
    "—É–º–µ—Ä–µ–Ω–Ω—ã–π":     "üü°",
    "–≤—Ä–µ–¥–Ω—ã–π":       "üü†",
    "–æ—á. –≤—Ä–µ–¥–Ω—ã–π":   "üî¥",
    "–æ–ø–∞—Å–Ω—ã–π":       "üü£",
    "–Ω/–¥":           "‚ö™Ô∏è",
}

# –§–∞–∫—Ç—ã –¥–Ω—è: –∫–ª—é—á = MM-DD
FACTS: dict[str, str] = {
    "05-11": "11 –º–∞—è ‚Äî –î–µ–Ω—å –º–æ—Ä—Å–∫–æ–≥–æ –±—Ä–∏–∑–∞ –Ω–∞ –ö–∏–ø—Ä–µ üå¨Ô∏è",
    "06-08": "8 –∏—é–Ω—è 2004 ‚Äî —Ç—Ä–∞–Ω–∑–∏—Ç –í–µ–Ω–µ—Ä—ã –ø–æ –¥–∏—Å–∫—É –°–æ–ª–Ω—Ü–∞ üåû",
    "07-20": "20 –∏—é–ª—è ‚Äî –Ω–∞ –ö–∏–ø—Ä–µ —Å–æ–±–∏—Ä–∞—é—Ç –ø–µ—Ä–≤—ã–π —É—Ä–æ–∂–∞–π –≤–∏–Ω–æ–≥—Ä–∞–¥–∞ üçá",
    # –¥–æ–±–∞–≤—å—Ç–µ –ø–æ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏
}

# ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ UTILITY FUNCTIONS ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ
COMPASS = ["N","NNE","NE","ENE","E","ESE","SE","SSE",
           "S","SSW","SW","WSW","W","WNW","NW","NNW"]

def compass(deg: float) -> str:
    """–ü—Ä–µ–æ–±—Ä–∞–∑—É–µ—Ç –≥—Ä–∞–¥—É—Å—ã 0‚Äì360¬∞ ‚Üí –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ N/NE/E‚Ä¶"""
    try:
        idx = int((deg / 22.5) + 0.5) % 16
        return COMPASS[idx]
    except Exception:
        logging.debug("compass: invalid deg=%s", deg)
        return "‚Äî"


def clouds_word(pc: int) -> str:
    """%-–æ–±–ª–∞—á–Ω–æ—Å—Ç–∏ ‚Üí "—è—Å–Ω–æ"/"–ø–µ—Ä–µ–º–µ–Ω–Ω–∞—è"/"–ø–∞—Å–º—É—Ä–Ω–æ""""
    if pc < 25:
        return "—è—Å–Ω–æ"
    if pc < 70:
        return "–ø–µ—Ä–µ–º–µ–Ω–Ω–∞—è"
    return "–ø–∞—Å–º—É—Ä–Ω–æ"


def wind_phrase(km_h: float) -> str:
    """–°–∫–æ—Ä–æ—Å—Ç—å –≤–µ—Ç—Ä–∞ ‚Üí "—à—Ç–∏–ª—å"/"—Å–ª–∞–±—ã–π"/"—É–º–µ—Ä–µ–Ω–Ω—ã–π"/"—Å–∏–ª—å–Ω—ã–π""""
    if km_h < 2:
        return "—à—Ç–∏–ª—å"
    if km_h < 8:
        return "—Å–ª–∞–±—ã–π"
    if km_h < 14:
        return "—É–º–µ—Ä–µ–Ω–Ω—ã–π"
    return "—Å–∏–ª—å–Ω—ã–π"


def safe(v: Union[None, str, float, int], unit: str = "") -> str:
    """–ö—Ä–∞—Å–∏–≤—ã–π –≤—ã–≤–æ–¥ –∑–Ω–∞—á–µ–Ω–∏—è (None –∏–ª–∏ '‚Äî' ‚Üí '‚Äî'), –∏–Ω–∞—á–µ —á–∏—Å–ª–æ+unit""""
    if v is None or v == "‚Äî":
        return "‚Äî"
    try:
        if isinstance(v, (int, float)):
            return f"{v:.1f}{unit}"
        return f"{v}{unit}"
    except Exception:
        return f"{v}{unit}"


def aqi_color(aqi: Union[int, float, str, None]) -> str:
    """AQI ‚Üí —Ü–≤–µ—Ç–æ–∫—Ä—É–∂–æ–∫-—ç–º–æ–¥–∑–∏ –ø–æ EPA"""
    if aqi is None or aqi == "‚Äî":
        return AIR_EMOJI.get("–Ω/–¥", "‚ö™Ô∏è")
    try:
        val = float(aqi)
    except Exception:
        return AIR_EMOJI.get("–Ω/–¥", "‚ö™Ô∏è")
    if val <= 50:
        lvl = "—Ö–æ—Ä–æ—à–∏–π"
    elif val <= 100:
        lvl = "—É–º–µ—Ä–µ–Ω–Ω—ã–π"
    elif val <= 150:
        lvl = "–≤—Ä–µ–¥–Ω—ã–π"
    elif val <= 200:
        lvl = "–æ—á. –≤—Ä–µ–¥–Ω—ã–π"
    else:
        lvl = "–æ–ø–∞—Å–Ω—ã–π"
    return AIR_EMOJI.get(lvl, AIR_EMOJI["–Ω/–¥"])


def get_fact(date_obj: pendulum.Date) -> str:
    """–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Ñ–∞–∫—Ç –¥–Ω—è –ø–æ –¥–∞—Ç–µ –∏–ª–∏ –∑–∞–ø–∞—Å–Ω–æ–π —Ñ–∞–∫—Ç"""
    key = date_obj.format("MM-DD")
    return FACTS.get(key,
                     f"–ù–∞ –ö–∏–ø—Ä–µ ‚âà340 —Å–æ–ª–Ω–µ—á–Ω—ã—Ö –¥–Ω–µ–π –≤ –≥–æ–¥—É ‚òÄÔ∏è")
