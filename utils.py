#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
utils.py  • Вспомогательные функции и константы VayboMeter-бота.

Содержит:
 - compass(deg)          — возвращает направление ветра по углу deg (0–360)
 - clouds_word(pc)       — возвращает «ясно/переменная/пасмурно» по проценту облачности
 - wind_phrase(km_h)     — возвращает «штиль/слабый/умеренный/сильный» по скорости ветра
 - safe(v, unit)         — None → «—», число → «X.X{unit}»
 - aqi_color(aqi)        — эмодзи уровня AQI
 - pm_color(pm, with_unit?) — эмодзи + значение PM₂.₅/PM₁₀
 - kp_emoji(kp)          — эмодзи по индексу Kp
 - pressure_trend(w)     — тренд давления («↑», «↓» или «→»)
 - HTTP-обёртки: _get / _get_retry
 - get_fact(date, region) — «факт дня» в зависимости от региона

Новое:
 - kmh_to_ms(v)          — перевод км/ч → м/с (с округлением до 0.1)
 - ms_to_kmh(v)          — перевод м/с → км/ч
 - smoke_index(pm25, pm10) — оценка «задымления» по PM (эмодзи + уровень)
"""

from __future__ import annotations
import time
import random
import requests
import pendulum
from typing import Any, Dict, Optional, List

# ──────────────────────── Компас, облака, ветер ──────────────────────────

COMPASS = [
    "С",   # Север
    "ССВ", # Северо-северо-восток
    "СВ",  # Северо-восток
    "ВСВ", # Восток-северо-восток
    "В",   # Восток
    "ВЮВ", # Восток-юго-восток
    "ЮВ",  # Юго-восток
    "ЮЮВ", # Юго-юго-восток
    "Ю",   # Юг
    "ЮЮЗ", # Юго-юго-запад
    "ЮЗ",  # Юго-запад
    "ЗЮЗ", # Запад-юго-запад
    "З",   # Запад
    "ЗСЗ", # Запад-северо-запад
    "СЗ",  # Северо-запад
    "ССЗ", # Северо-северо-запад
]

def compass(deg: float) -> str:
    """
    Возвращает сторону света (из 16) по углу deg (0–360).
    """
    index = int((deg / 22.5) + 0.5) % 16
    return COMPASS[index]

def clouds_word(pc: int) -> str:
    """
    По проценту облачности:
      <25% → «ясно»
      <70% → «переменная»
      иначе → «пасмурно»
    """
    if pc < 25:
        return "ясно"
    if pc < 70:
        return "переменная"
    return "пасмурно"

def wind_phrase(km_h: float) -> str:
    """
    По скорости ветра (км/ч):
      < 2  → «штиль»
      < 8  → «слабый»
      < 14 → «умеренный»
      иначе → «сильный»
    """
    if km_h < 2:
        return "штиль"
    if km_h < 8:
        return "слабый"
    if km_h < 14:
        return "умеренный"
    return "сильный"

def kmh_to_ms(v_kmh: Optional[float]) -> Optional[float]:
    """
    Переводит скорость из км/ч в м/с с округлением до 0.1.
    None → None.
    """
    if v_kmh is None:
        return None
    try:
        return round(float(v_kmh) / 3.6, 1)
    except (TypeError, ValueError):
        return None

def ms_to_kmh(v_ms: Optional[float]) -> Optional[float]:
    """
    Переводит скорость из м/с в км/ч с округлением до 0.1.
    None → None.
    """
    if v_ms is None:
        return None
    try:
        return round(float(v_ms) * 3.6, 1)
    except (TypeError, ValueError):
        return None

def safe(v: Any, unit: str = "") -> str:
    """
    None / 'None' / '—' → «—»
    Число → форматированная строка с единицей:
      safe(5.237, "°C") → «5.2°C»
      safe("10", "мм") → «10мм»
    """
    if v in (None, "None", "—"):
        return "—"
    if isinstance(v, (int, float)):
        return f"{v:.1f}{unit}"
    return f"{v}{unit}"

# ──────────────────────── AQI & PM раскраска ─────────────────────────────

def aqi_color(aqi: int | float | str) -> str:
    """
    Эмодзи уровня AQI:
      ≤ 50   → 🟢
      ≤100   → 🟡
      ≤150   → 🟠
      ≤200   → 🔴
      ≤300   → 🟣
      >300   → 🟤
      «—»/«н/д» → ⚪
    """
    if aqi in ("—", "н/д"):
        return "⚪"
    try:
        val = float(aqi)
    except (TypeError, ValueError):
        return "⚪"
    if val <= 50:
        return "🟢"
    if val <= 100:
        return "🟡"
    if val <= 150:
        return "🟠"
    if val <= 200:
        return "🔴"
    if val <= 300:
        return "🟣"
    return "🟤"

def pm_color(pm: Optional[float | int | str], with_unit: bool = False) -> str:
    """
    Цветовая индикация концентрации PM₂.₅ / PM₁₀:
      ≤ 12   → 🟢
      ≤ 35   → 🟡
      ≤ 55   → 🟠
      ≤150   → 🔴
      ≤250   → 🟣
      >250   → 🟤
      None / «—»/«н/д» → ⚪ н/д

    Если with_unit=True, добавляет « µg/м³».
    """
    if pm in (None, "—", "н/д"):
        return "⚪ н/д"
    try:
        val = float(pm)
    except (TypeError, ValueError):
        return "⚪ н/д"
    if val <= 12:
        emoji = "🟢"
    elif val <= 35:
        emoji = "🟡"
    elif val <= 55:
        emoji = "🟠"
    elif val <= 150:
        emoji = "🔴"
    elif val <= 250:
        emoji = "🟣"
    else:
        emoji = "🟤"
    txt = str(int(round(val)))
    if with_unit:
        txt += " µg/м³"
    return f"{emoji}{txt}"

# ──────────────────────── Индекс «задымления» по PM ───────────────────────

def smoke_index(pm25: Optional[float | int | str],
                pm10:  Optional[float | int | str]) -> tuple[str, str]:
    """
    Оценка «задымления» по PM:
      База — по PM2.5 (µg/m³):
        0–25  → низкое
        25–55 → среднее
        >55   → высокое
      Модификатор по доле мелкой фракции включается ТОЛЬКО при заметной концентрации:
        если PM2.5 ≥ 20 и PM10 > 0 и (PM2.5/PM10) > 0.70 → +1 ступень (до «высокого»).
    """
    def _to_float(x):
        try:
            return float(x)
        except (TypeError, ValueError):
            return None

    p25 = _to_float(pm25)
    p10 = _to_float(pm10)
    if p25 is None:
        return "⚪", "н/д"

    # базовый уровень по PM2.5
    if p25 <= 25:
        lvl = 0  # низкое
    elif p25 <= 55:
        lvl = 1  # среднее
    else:
        lvl = 2  # высокое

    # модификатор — только при ощутимых концентрациях
    if p25 >= 20 and p10 and p10 > 0:
        ratio = p25 / p10
        if ratio > 0.70:
            lvl = min(lvl + 1, 2)

    if lvl == 0:
        return "🟢", "низкое"
    if lvl == 1:
        return "🟡", "среднее"
    return "🔴", "высокое"

# ──────────────────────── «Факт дня» ─────────────────────────────────────

FACTS: Dict[str, str] = {
    "01-03": "3 января — Фестиваль гранатов в Ормидии: дегустации и танцы под звездами, а в 1960 году Кипр стал республикой 🍎",
    "01-07": "7 января — День святого Иоанна Крестителя: службы в монастырях и пироги с оливками, а оливковые рощи начинают цвести 🥖🌳",  # Объединено с твоим
    "01-20": "20 января — День святого Неофита: паломничества к пещерному монастырю в Пафосе и сбор первого миндаля 🌰",
    "02-03": "3 февраля — Фестиваль апельсинов в Лефкаре: ярмарки с цитрусовыми и вышивкой, а фламинго прилетают в Ларнакское озеро 🦩",
    "02-25": "25 февраля — Чистый понедельник (Катаклизмос): народ отмечает праздник вод и весны, а в 1974 году начались миротворческие переговоры 🌊🕊️",  # Объединено
    "03-03": "3 марта — Фестиваль цветов в Платресе: горы Троодоса утопают в цветах, а в 1878 году Кипр перешел под британское управление 🌸📜",
    "03-20": "20 марта — Весеннее равноденствие: кипрские поля покрываются маками, а в Лимассоле стартуют винные туры 🌺🍷",
    "04-02": "2 апреля — День кипрских ремесел в Лефкаре: мастер-классы по кружеву и серебру, а в 1191 году Ричард Львиное Сердце захватил Кипр ⚔️",
    "04-20": "20 апреля — Пасхальная неделя начинается: в деревне Калавасос пекут флауну, а черепахи выходят на пляжи Лары 🐢",
    "05-06": "6 мая — Фестиваль роз в Агросе: деревня утопает в розовых лепестках, а в 1974 году начались переговоры по разделу Никосии 🌹",
    "05-11": "11 мая — День морского бриза и черешни в Кипре: в Кирении собирают первый урожай черешни 🍒🌬️",  # Объединено
    "06-02": "2 июня — Фестиваль меда в Лимассоле: дегустации меда и сладостей, а в 2004 году Кипр стал членом ЕС 🍯🇪🇺",
    "06-20": "20 июня — Фестиваль лаванды в Платресе: поля Троодоса пахнут лавандой, а в 1571 году Кипр перешел к Османам 🌿📜",
    "07-02": "2 июля — День святого Прокопия: в деревне Писсури пекут лепешки и отмечают сбор инжира 🍈",
    "07-20": "20 июля — На Кипре собирают первый урожай винограда, а в 1974 году началась турецкая интервенция 🍇⚔️",  # Объединено
    "08-02": "2 августа — Фестиваль оливок в Килани: ярмарки и танцы, а оливковые рощи в разгаре плодоношения 🫒",
    "08-20": "20 августа — День святого Стефана: в Ларнаке украшают лодки, а в 1960 году Кипр провозгласил независимость 🚤🇨🇾",
    "09-02": "2 сентября — Фестиваль винограда в Лания: дегустации вина и танцы, а в 1974 году завершилась активная фаза конфликта 🍇🕊️",
    "09-15": "15 сентября — День археологии: в Пафосе открыты раскопки, а миндальные рощи готовятся к новому сезону 🏛️🌳",
    "10-02": "2 октября — Фестиваль хлеба в Какопетрии: пекут деревенский хлеб, а в 1878 году британцы начали строить порт Лимассола 🥖⚓",
    "10-10": "10 октября — День святого Павла: службы в Пафосе, а в 1983 году провозгласили ТРСК 🕍📜",
    "10-28": "28 октября — День «Охи» и сбора оливок: греческое «нет» с парадами и начало оливкового сезона 🇬🇷🫒",  # Объединено
    "11-03": "3 ноября — Фестиваль каштанов в Троодосе: жарят каштаны, а в 1192 году Кипр стал королевством крестоносцев 🌰⚔️",
    "11-15": "15 ноября — День святого Филиппа: в деревнях пекут постные пироги, а в Ларнаке собирают последние апельсины 🍊",
    "12-01": "1 декабря — Фестиваль зиваны в Омодосе: готовят мясо с рисом, а в 2003 году открыли КПП в Никосии 🍲",
    "12-15": "15 декабря — День святого Елевферия: службы в церквях, а фламинго возвращаются на соленое озеро 🦩",
    "01-10": "10 января — День странного: в Айя-Напе устраивают необычные вечеринки, а море сияет биолюминесценцией 🌊✨",
    "02-20": "20 февраля — День кипрских котов: котики в монастыре Святого Николая получают угощения 😺",
    "03-10": "10 марта — День кипрских орхидей: в горах цветут дикие орхидеи, а в Лимассоле пьют фраппе 🌸☕",
    "04-10": "10 апреля — День братьев и сестер: на Кипре дарят сувлу, а в 1489 году Кипр стал венецианским 🥙📜",
    "05-20": "20 мая — Всемирный день пчел: в деревне Пера пекут медовые сладости, а поля цветут маками 🐝🌺",
    "06-10": "10 июня — День мороженого: в Пафосе едят мороженое с инжиром, а море теплое, как суп 🍦🌊",
    "07-30": "30 июля — День дружбы: в Ларнаке пьют коктейли, а в 1974 году ООН вмешалась в кипрский конфликт 🍹🕊️",
    "08-25": "25 августа — День звездопада: на пляжах Кипра смотрят на Персеиды, а в Омодосе пьют вино 🌠🍷",
    "09-25": "25 сентября — День туризма: в Айя-Напе устраивают вечеринки, а в 1960 году открыли аэропорт Ларнаки 🛫",
    "10-20": "20 октября — День кипрских птиц: в Троодосе наблюдают за перелетными птицами, а в Пафосе пекут питту 🐦🥖",
    "11-25": "25 ноября — День без покупок: на Кипре гуляют по набережной и едят халлуми вместо шопинга 🧀🌊",
    "12-20": "20 декабря — День сангрии: в Никосии пьют сангрию, а в 1974 году начались переговоры по Кипру 🍷🕊️",
    "06-08": "8 июня 2004 — транзит Венеры по диску Солнца 🌞",
    "10-01": "1 октября — День Кипра 🍷",
    "01-01": "1 января — Новый год на Кипре начинается с фейерверков над старинными крепостями 🎆",
    "01-06": "6 января — Крещение Господне: некоторые смельчаки окунаются в Средиземное море ❄️",
    "02-14": "14 февраля — День святого Валентина: любовь витает в воздухе, а рынки завалены мимозами и виноградом 💐",
    "03-08": "8 марта — Международный женский день: цветы и поздравления для всех дам 💐",
    "03-25": "25 марта — День независимости Греции: на северном Кипре тоже звучат марши и парады 🇬🇷",
    "04-01": "1 апреля — День независимости Кипра и День смеха: на Кипре шутят с друзьями и на пляже строят песчаные замки 🤡",
    "05-01": "1 мая — День труда и цветущих маков: в горах кипят гулянья и народные танцы 🌺",
    "06-21": "21 июня — День летнего солнцестояния: самый длинный день года ☀️",
    "06-29": "29 июня — Праздник святых Петра и Павла в Пафосе: богослужения и народные гулянья 🕍",
    "08-15": "15 августа — Успение Богородицы (Панайя): крупнейший религиозный фестиваль острова ⛪️",
    "08-16": "16 августа — День Конституции Кипра: официальный выходной с парадами и концертом 📜",
    "09-21": "21 сентября — Международный день мира: флаги мира над старым городом Никосии 🕊️",
    "10-11": "11 октября — День святого Варнавы: почитается покровитель Кипрской церкви 🙏",
    "10-31": "31 октября — День святого Луки: в деревнях греют красное вино и угощают козу 😂🍷",
    "11-01": "1 ноября — День всех святых: дома украшают соломенными венками и свечами 🕯️",
    "12-24": "24 декабря — Сочельник Рождества: семьи готовят «махалло» и сладости 🎄",
    "12-25": "25 декабря — Рождество: улицы Никосии сверкают гирляндами и ярмарками 🎁",
    "12-26": "26 декабря — Boxing Day: распродажи и семейные посиделки в прибрежных кафе 🛍️",
    "12-31": "31 декабря — Канун Нового года: пляжи и набережные заполняются гуляками до утра 🥂",
}
DEFAULT_FACTS: List[str] = [
    "На Кипре более 1 800 видов растений — весна тут цветёт ярче любого поста в Инстаграме 🌸",
    "Общая длина побережья острова — 985 км: хватит кататься на байке по пляжам 🏍️",
    "Летом вода в Средиземном море прогревается до 27 °C — купаться комфортно почти весь июнь–сентябрь 🌊",
    "В Лимассоле около 360 солнечных дней в году — бери солнечные очки и вперёд ☀️",
    "Кипр — дом для четырёх видов морских черепах: они тоже любят берег нашей любимой бухты 🐢",
    "Средняя годовая норма осадков — всего 350 мм; зонт здесь вырос в статус аксессуара 😉 ☂️",
    "На острове зарегистрировано 12 природных заповедников — если захочешь уйти в тишину лесов 🌲",
    "Первое упоминание Ноева ковчега связано с горами Кипра — не удивлюсь, если там и Шуман-шум просыпается раньше 😉",
    "Ежегодно в марте–апреле цветёт более 50 000 миндальных деревьев — рай для любителей розово-белых закатов 🌅",
    "Никосия — последняя “зелёная линия” Европы, где история встречается с современностью 🏰",
    "Здесь производится знаменитый кипрский сыр халлуми — если ещё не пробовали, самое время 🧀",
    "В Пафосе находится древнее гробница Королей — наслаждайтесь архитектурой под открытым небом 🏛️",
    "На Кипре растут уникальные кипарисы, возраст некоторых превышает 500 лет 🌳",
    "В горах Троодос можно найти заброшенные византийские монастыри XII века ⛪️",
    "Каждую весну остров покрывается полем маков и васильков — рай для фотографов 📸",
    "На Кипре порядка 60 пляжей получили «Синий флаг» за чистоту воды и сервиса 🏖️",
    "Местные апельсины считаются одними из сладчайших в мире — попробуйте их ранним утром 🍊",
    "Зимой горы Троодос покрываются снегом, и местные катаются на лыжах в темпе медленного йодля 🎿",
    "Кипр — родина знаменитого поэта Клеоба, чьи стихи посвящены красоте Средиземноморья 📜",
    "В Ларнаке находится старейшая соборная мечеть XIII века, работающая по сей день 🕌"
]

def get_fact(date_obj, region: str = "") -> str:
    """Факт дня для Кипра: FACTS[MM-DD] → fallback из DEFAULT_FACTS."""
    mm = f"{getattr(date_obj,'month',None) or getattr(date_obj,'month',0):02d}"
    dd = f"{getattr(date_obj,'day',None) or getattr(date_obj,'day',0):02d}"
    key = f"{mm}-{dd}"
    if key in FACTS:
        return FACTS[key]
    try:
        idx = (int(dd) - 1) % len(DEFAULT_FACTS)
    except Exception:
        idx = 0
    return DEFAULT_FACTS[idx]
