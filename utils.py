#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
utils.py  ‚Ä¢  –±–∞–∑–æ–≤—ã–µ –ø–æ–º–æ—â–Ω–∏–∫–∏, –æ—Ç –∫–æ—Ç–æ—Ä—ã—Ö –∑–∞–≤–∏—Å—è—Ç –≤—Å–µ –æ—Å—Ç–∞–ª—å–Ω—ã–µ –º–æ–¥—É–ª–∏
"""

from __future__ import annotations

import logging
import random
import time
from typing import Any, Dict

import pendulum
import requests

# ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ –∫–æ–º–ø–∞—Å ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ
COMPASS = [
    "N", "NNE", "NE", "ENE", "E", "ESE", "SE", "SSE",
    "S", "SSW", "SW", "WSW", "W", "WNW", "NW", "NNW",
]

COMPASS_RU = [
    "–°", "–°–°–í", "–°–í", "–í–°–í", "–í", "–í–Æ–í", "–Æ–í", "–Æ–Æ–í",
    "–Æ", "–Æ–Æ–ó", "–Æ–ó", "–ó–Æ–ó", "–ó", "–ó–°–ó", "–°–ó", "–°–°–ó",
]


def compass(deg: float) -> str:
    """0‚Äì360¬∞ ‚Üí –∞–Ω–≥–ª. —Ä—É–º–±–∞ (N, NE ‚Ä¶)."""
    return COMPASS[int((deg / 22.5) + 0.5) % 16]


def compass_ru(deg: float) -> str:
    """0‚Äì360¬∞ ‚Üí —Ä—É—Å. —Ä—É–º–±–∞ (–°, –°–í ‚Ä¶)."""
    return COMPASS_RU[int((deg / 22.5) + 0.5) % 16]


# ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ –ø–æ–≥–æ–¥–Ω—ã–µ —Å–ª–æ–≤–∞—Ä–∏ ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ
def clouds_word(pc: int) -> str:
    if pc < 25:
        return "—è—Å–Ω–æ"
    if pc < 70:
        return "–ø–µ—Ä–µ–º–µ–Ω–Ω–∞—è"
    return "–ø–∞—Å–º—É—Ä–Ω–æ"


def wind_phrase(km_h: float) -> str:
    if km_h < 2:
        return "—à—Ç–∏–ª—å"
    if km_h < 8:
        return "—Å–ª–∞–±—ã–π"
    if km_h < 14:
        return "—É–º–µ—Ä–µ–Ω–Ω—ã–π"
    return "—Å–∏–ª—å–Ω—ã–π"


def safe(v: Any, unit: str = "") -> str:
    """–ß–∏—Å–ª–æ ‚Üí 'xx.x unit', None/‚Äî ‚Üí '–Ω/–¥'."""
    if v in (None, "None", "‚Äî", "–Ω/–¥"):
        return "–Ω/–¥"
    return f"{v:.1f}{unit}" if isinstance(v, (int, float)) else f"{v}{unit}"


# ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ WMO weather-code –∫—Ä–∞—Ç–∫–∏–µ –æ–ø–∏—Å–∞–Ω–∏—è ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ
WMO_DESC: Dict[int, str] = {
    0: "–Ø—Å–Ω–æ",
    1: "–ü—Ä–µ–∏–º. —è—Å–Ω–æ",
    2: "–ü–µ—Ä–µ–º–µ–Ω–Ω–∞—è –æ–±–ª–∞—á–Ω–æ—Å—Ç—å",
    3: "–ü–∞—Å–º—É—Ä–Ω–æ",
    45: "–¢—É–º–∞–Ω",
    48: "–¢—É–º–∞–Ω —Å –∏–∑–º–æ—Ä–æ–∑—å—é",
    51: "–ú–æ—Ä–æ—Å—å —Å–ª–∞–±–∞—è",
    53: "–ú–æ—Ä–æ—Å—å",
    55: "–ú–æ—Ä–æ—Å—å —Å–∏–ª—å–Ω–∞—è",
    61: "–î–æ–∂–¥—å —Å–ª–∞–±—ã–π",
    63: "–î–æ–∂–¥—å",
    65: "–î–æ–∂–¥—å —Å–∏–ª—å–Ω—ã–π",
    66: "–õ–µ–¥—è–Ω–æ–π –¥–æ–∂–¥—å",
    71: "–°–Ω–µ–≥ —Å–ª–∞–±—ã–π",
    73: "–°–Ω–µ–≥",
    75: "–°–Ω–µ–≥ —Å–∏–ª—å–Ω—ã–π",
    80: "–õ–∏–≤–µ–Ω—å —Å–ª–∞–±—ã–π",
    81: "–õ–∏–≤–µ–Ω—å",
    82: "–õ–∏–≤–µ–Ω—å —Å–∏–ª—å–Ω—ã–π",
    95: "–ì—Ä–æ–∑–∞",
    99: "–ì—Ä–æ–∑–∞ —Å –≥—Ä–∞–¥–æ–º",
}

# ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ AQI / PM —Ü–≤–µ—Ç–æ–≤—ã–µ –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä—ã ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ
def aqi_color(aqi: Any) -> str:
    if aqi in ("–Ω/–¥", None, "‚Äî"):
        return "‚ö™"
    aqi = float(aqi)
    if aqi <= 50:
        return "üü¢"
    if aqi <= 100:
        return "üü°"
    if aqi <= 150:
        return "üü†"
    if aqi <= 200:
        return "üî¥"
    if aqi <= 300:
        return "üü£"
    return "üü§"


def pm_color(pm_val: Any) -> str:
    """PM-–∫–æ–Ω—Ü–µ–Ω—Ç—Ä–∞—Ü–∏—è ‚Üí —ç–º–æ–¥–∑–∏-—Ü–≤–µ—Ç + —á–∏—Å–ª–æ / ¬´–Ω/–¥¬ª."""
    if pm_val in (None, "–Ω/–¥", "‚Äî"):
        return "–Ω/–¥"
    v = float(pm_val)
    if v <= 15:
        m = "üü¢"
    elif v <= 30:
        m = "üü°"
    elif v <= 55:
        m = "üü†"
    elif v <= 110:
        m = "üî¥"
    else:
        m = "üü£"
    return f"{m}{int(round(v))}"


# ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ –§–∞–∫—Ç—ã –¥–Ω—è ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ
FACTS = {
    "01-01": "1 —è–Ω–≤–∞—Ä—è ‚Äî –Ω–∞ –ö–∏–ø—Ä–µ —É–∂–µ —Ü–≤–µ—Ç—ë—Ç –º–∏–Ω–¥–∞–ª—å üå∏",
    "02-14": "14 —Ñ–µ–≤—Ä–∞–ª—è 1960 ‚Äî –ø—Ä–æ–≤–æ–∑–≥–ª–∞—à–µ–Ω–∞ –†–µ—Å–ø—É–±–ª–∏–∫–∞ –ö–∏–ø—Ä üá®üáæ",
    "03-22": "22 –º–∞—Ä—Ç–∞ ‚Äî –í—Å–µ–º–∏—Ä–Ω—ã–π –¥–µ–Ω—å –≤–æ–¥—ã üíß",
    "04-27": "27 –∞–ø—Ä–µ–ª—è 1961 ‚Äî –æ—Ç–∫—Ä—ã—Ç –∞—ç—Ä–æ–ø–æ—Ä—Ç –õ–∞—Ä–Ω–∞–∫–∏ ‚úàÔ∏è",
    "05-11": "11 –º–∞—è ‚Äî –î–µ–Ω—å –º–æ—Ä—Å–∫–æ–≥–æ –±—Ä–∏–∑–∞ üå¨Ô∏è",
    "06-08": "8 –∏—é–Ω—è 2004 ‚Äî —Ç—Ä–∞–Ω–∑–∏—Ç –í–µ–Ω–µ—Ä—ã –ø–æ –°–æ–ª–Ω—Ü—É üåû",
    "07-20": "20 –∏—é–ª—è ‚Äî –ø–µ—Ä–≤—ã–π —É—Ä–æ–∂–∞–π –≤–∏–Ω–æ–≥—Ä–∞–¥–∞ üçá",
    "08-16": "16 –∞–≤–≥—É—Å—Ç–∞ ‚Äî —Å–∞–º—ã–π —Ç—ë–ø–ª—ã–π –¥–µ–Ω—å –≥–æ–¥–∞ üî•",
    "09-27": "27 —Å–µ–Ω—Ç—è–±—Ä—è ‚Äî –í—Å–µ–º–∏—Ä–Ω—ã–π –¥–µ–Ω—å —Ç—É—Ä–∏–∑–º–∞ üß≥",
    "10-31": "31 –æ–∫—Ç—è–±—Ä—è ‚Äî –ø–∏–∫ ¬´–±–∞—Ä—Ö–∞—Ç–Ω–æ–≥–æ¬ª —Å–µ–∑–æ–Ω–∞ üèñÔ∏è",
    "12-22": "22 –¥–µ–∫–∞–±—Ä—è ‚Äî —Ä–∞—Å–ø—É—Å–∫–∞—é—Ç—Å—è –∑–∏–º–Ω–∏–µ –∞–Ω–µ–º–æ–Ω—ã üå∫",
}


def get_fact(date_obj: pendulum.Date) -> str:
    return FACTS.get(date_obj.format("MM-DD"),
                     "–ù–∞ –ö–∏–ø—Ä–µ ‚âà 340 —Å–æ–ª–Ω–µ—á–Ω—ã—Ö –¥–Ω–µ–π ‚òÄÔ∏è")


# ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ –∏–∫–æ–Ω–∫–∏ –ø–æ–≥–æ–¥—ã / —Ü–≤–µ—Ç K-index ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ
WEATHER_ICONS = {
    "—è—Å–Ω–æ": "‚òÄÔ∏è",
    "–ø–µ—Ä–µ–º–µ–Ω–Ω–∞—è": "üå§Ô∏è",
    "–ø–∞—Å–º—É—Ä–Ω–æ": "‚òÅÔ∏è",
    "–¥–æ–∂–¥—å": "üåßÔ∏è",
    "—Ç—É–º–∞–Ω": "üåÅ",
}

AIR_EMOJI = {
    "—Ö–æ—Ä–æ—à–∏–π": "üü¢",
    "—É–º–µ—Ä–µ–Ω–Ω—ã–π": "üü°",
    "–≤—Ä–µ–¥–Ω—ã–π": "üü†",
    "–æ—á. –≤—Ä–µ–¥–Ω—ã–π": "üî¥",
    "–æ–ø–∞—Å–Ω—ã–π": "üü£",
    "–Ω/–¥": "‚ö™",
}

K_COLOR = {"green": range(0, 4), "yellow": range(4, 6), "red": range(6, 10)}


def kp_emoji(kp: float) -> str:
    k = int(round(kp))
    if k in K_COLOR["green"]:
        return "üü¢"
    if k in K_COLOR["yellow"]:
        return "üü°"
    return "üî¥"


# ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ —Ç—Ä–µ–Ω–¥ –¥–∞–≤–ª–µ–Ω–∏—è ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ
def pressure_trend(w: dict) -> str:
    """
    –°—Ä–∞–≤–Ω–∏–≤–∞–µ–º –¥–≤–∞ –ø–µ—Ä–≤—ã—Ö –∑–Ω–∞—á–µ–Ω–∏—è hourly['surface_pressure'].
      ‚Ä¢ diff ‚â• +1 –≥–ü–∞ ‚Üí ‚Üë
      ‚Ä¢ diff ‚â§ ‚Äì1 –≥–ü–∞ ‚Üí ‚Üì
      ‚Ä¢ –∏–Ω–∞—á–µ         ‚Üí ‚Üí
    """
    hp = w.get("hourly", {}).get("surface_pressure", [])
    if len(hp) < 2:
        return "‚Üí"
    diff = hp[1] - hp[0]
    if diff >= 1:
        return "‚Üë"
    if diff <= -1:
        return "‚Üì"
    return "‚Üí"


# ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ HTTP-–æ–±—ë—Ä—Ç–∫–∏ ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ
def _get_retry(url: str, retries: int = 2, **params):
    """
    GET-–∑–∞–ø—Ä–æ—Å —Å —ç–∫—Å–ø–æ–Ω–µ–Ω—Ü–∏–∞–ª—å–Ω—ã–º–∏ –ø–æ–≤—Ç–æ—Ä–∞–º–∏.
    –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç JSON-dict –∏–ª–∏ None.
    """
    attempt = 0
    while attempt <= retries:
        try:
            r = requests.get(
                url, params=params, timeout=15,
                headers={"User-Agent": "VayboMeter"},
            )
            r.raise_for_status()
            return r.json()
        except Exception as e:
            attempt += 1
            if attempt > retries:
                logging.warning("%s ‚Äì %s (attempts=%d)",
                                url.split("/")[2], e, attempt)
                return None
            time.sleep(0.5 * attempt)  # 0.5 s, 1 s, ‚Ä¶


def _get(url: str, **params):
    """–ò—Å—Ç–æ—Ä–∏—á–µ—Å–∫–∏–π –∞–ª–∏–∞—Å: `_get_retry` —Å –¥–≤—É–º—è –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–º–∏ –ø–æ–ø—ã—Ç–∫–∞–º–∏."""
    return _get_retry(url, retries=2, **params)
