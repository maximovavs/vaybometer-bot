#!/usr/bin/env python3
# -*- coding: utf-8 -*-

import math
import requests
import logging
import random
import pendulum

# ‚îÄ‚îÄ —Ä—É–º–±—ã –¥–ª—è –∫–æ–º–ø–∞—Å–∞ ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ
COMPASS = [
    "N","NNE","NE","ENE","E","ESE","SE","SSE",
    "S","SSW","SW","WSW","W","WNW","NW","NNW"
]

def compass(deg: float) -> str:
    """–ß–∏—Å–ª–æ–≤–æ–π —É–≥–æ–ª 0‚Äì360¬∞ ‚Üí –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ N/NE/E‚Ä¶."""
    return COMPASS[int((deg / 22.5) + .5) % 16]

def clouds_word(pc: int) -> str:
    """–ü—Ä–æ—Ü–µ–Ω—Ç –æ–±–ª–∞—á–Ω–æ—Å—Ç–∏ ‚Üí '—è—Å–Ω–æ'/'–ø–µ—Ä–µ–º–µ–Ω–Ω–∞—è'/'–ø–∞—Å–º—É—Ä–Ω–æ'."""
    if pc < 25:
        return "—è—Å–Ω–æ"
    if pc < 70:
        return "–ø–µ—Ä–µ–º–µ–Ω–Ω–∞—è"
    return "–ø–∞—Å–º—É—Ä–Ω–æ"

def wind_phrase(km_h: float) -> str:
    """–°–∫–æ—Ä–æ—Å—Ç—å –≤–µ—Ç—Ä–∞ ‚Üí '—à—Ç–∏–ª—å'/'—Å–ª–∞–±—ã–π'/'—É–º–µ—Ä–µ–Ω–Ω—ã–π'/'—Å–∏–ª—å–Ω—ã–π'."""
    if km_h < 2:
        return "—à—Ç–∏–ª—å"
    if km_h < 8:
        return "—Å–ª–∞–±—ã–π"
    if km_h < 14:
        return "—É–º–µ—Ä–µ–Ω–Ω—ã–π"
    return "—Å–∏–ª—å–Ω—ã–π"

def safe(v, unit: str = "") -> str:
    """–ù–æ—Ä–º–∞–ª–∏–∑—É–µ—Ç None ‚Üí '‚Äî', —á–∏—Å–ª–æ ‚Üí —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–Ω—É—é —Å—Ç—Ä–æ–∫—É."""
    if v in (None, "None", "‚Äî"):
        return "‚Äî"
    if isinstance(v, (int, float)):
        return f"{v:.1f}{unit}"
    return f"{v}{unit}"

# ‚îÄ‚îÄ AQI ‚Üí —Ü–≤–µ—Ç–æ–∫—Ä—É–∂–æ–∫-—ç–º–æ–¥–∑–∏ –ø–æ US-EPA ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ
def aqi_color(aqi: int | float | str) -> str:
    """AQI ‚Üí üü¢üü°üü†üî¥üü£ (—Å—Ç—Ä–æ–∫–∞)."""
    if aqi == "‚Äî":
        return "‚ö™"
    aqi = float(aqi)
    if aqi <= 50:
        return "üü¢"
    if aqi <= 100:
        return "üü°"
    if aqi <= 150:
        return "üü†"
    if aqi <= 200:
        return "üî¥"
    if aqi <= 300:
        return "üü£"
    return "üü§"

# ‚îÄ‚îÄ ¬´–§–∞–∫—Ç –¥–Ω—è¬ª –ø–æ –¥–∞—Ç–µ –∏–ª–∏ –∑–∞–ø–∞—Å–Ω–æ–π ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ
FACTS = {
    "05-11": "11 –º–∞—è ‚Äî –î–µ–Ω—å –º–æ—Ä—Å–∫–æ–≥–æ –±—Ä–∏–∑–∞ –Ω–∞ –ö–∏–ø—Ä–µ üå¨Ô∏è",
    "06-08": "8 –∏—é–Ω—è 2004 –≥. ‚Äî —Ç—Ä–∞–Ω–∑–∏—Ç –í–µ–Ω–µ—Ä—ã –ø–æ –¥–∏—Å–∫—É –°–æ–ª–Ω—Ü–∞ üåû",
    "07-20": "20 –∏—é–ª—è ‚Äî –Ω–∞ –ö–∏–ø—Ä–µ —Å–æ–±–∏—Ä–∞—é—Ç –ø–µ—Ä–≤—ã–π —É—Ä–æ–∂–∞–π –≤–∏–Ω–æ–≥—Ä–∞–¥–∞ üçá",
}

def get_fact(date_obj: pendulum.Date) -> str:
    """
    –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Ñ–∞–∫—Ç –ø–æ –∫–ª—é—á—É MM-DD –∏–∑ —Å–ª–æ–≤–∞—Ä—è FACTS
    –∏–ª–∏ –∑–∞–ø–∞—Å–Ω–æ–π —Ñ–∞–∫—Ç.
    """
    key = date_obj.format("MM-DD")
    return FACTS.get(key, "–ù–∞ –ö–∏–ø—Ä–µ –≤ –≥–æ–¥—É ‚âà340 —Å–æ–ª–Ω–µ—á–Ω—ã—Ö –¥–Ω–µ–π ‚òÄÔ∏è")

# ‚îÄ‚îÄ –≠–º–æ–¥–∑–∏-–∏–∫–æ–Ω–∫–∏ ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ
WEATHER_ICONS = {
    "—è—Å–Ω–æ":       "‚òÄÔ∏è",
    "–ø–µ—Ä–µ–º–µ–Ω–Ω–∞—è": "üå§Ô∏è",
    "–ø–∞—Å–º—É—Ä–Ω–æ":   "‚òÅÔ∏è",
    "–¥–æ–∂–¥—å":      "üåßÔ∏è",
    "—Ç—É–º–∞–Ω":      "üåÅ",
}

AIR_EMOJI = {
    "—Ö–æ—Ä–æ—à–∏–π":      "üü¢",
    "—É–º–µ—Ä–µ–Ω–Ω—ã–π":    "üü°",
    "–≤—Ä–µ–¥–Ω—ã–π":      "üü†",
    "–æ—á. –≤—Ä–µ–¥–Ω—ã–π":  "üî¥",
    "–æ–ø–∞—Å–Ω—ã–π":      "üü£",
    "–Ω/–¥":          "‚ö™",
}

# ‚îÄ‚îÄ –£–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω—ã–π HTTP-–≥–µ—Ç—Ç–µ—Ä —Å –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ–º ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ
def _get(url: str, **params) -> dict | None:
    """
    –í—ã–ø–æ–ª–Ω—è–µ—Ç GET-–∑–∞–ø—Ä–æ—Å, –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Ä–∞—Å–ø–∞—Ä—Å–µ–Ω–Ω—ã–π JSON
    –∏–ª–∏ None –ø—Ä–∏ –æ—à–∏–±–∫–µ.
    """
    try:
        r = requests.get(url, params=params, timeout=15, headers={"User-Agent": "VayboMeter"})
        r.raise_for_status()
        return r.json()
    except Exception as e:
        host = url.split("/")[2]
        logging.warning("%s ‚Äì %s", host, e)
        return None
