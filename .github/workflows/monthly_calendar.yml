name: Monthly VayboMeter Calendar

on:
  schedule:
    - cron: '0 10 * * *'           # –∫–∞–∂–¥—ã–π –¥–µ–Ω—å 10:00 UTC
  workflow_dispatch:
    inputs:
      force_run:
        description: "–ó–∞–ø—É—Å—Ç–∏—Ç—å –Ω–µ–∑–∞–≤–∏—Å–∏–º–æ –æ—Ç –¥–∞—Ç—ã"
        required:    false
        default:     "false"

permissions:
  contents: write

jobs:
  monthly:
    runs-on: ubuntu-latest

    steps:
    # 1) Checkout
    - uses: actions/checkout@v4
      with: {fetch-depth: 0}

    # 2) –û–ø—Ä–µ–¥–µ–ª—è–µ–º, –Ω–∞–¥–æ –ª–∏ –≤—ã–ø–æ–ª–Ω—è—Ç—å —Ä–∞—Å—á—ë—Ç
    - name: üîç Decide whether to run calendar
      id:   decide
      run: |
        # true, –µ—Å–ª–∏ –∑–∞–≤—Ç—Ä–∞ 1-–µ —á–∏—Å–ª–æ
        [[ $(date -d 'tomorrow' +%d) == "01" ]] && run=yes || run=no

        # —Ä—É—á–Ω–æ–π –∑–∞–ø—É—Å–∫ —Å force_run=yes —Ç–æ–∂–µ –≤–∫–ª—é—á–∞–µ—Ç
        if [[ "${{ github.event_name }}" == "workflow_dispatch" && \
              "${{ github.event.inputs.force_run }}" == "true" ]]; then
          run=yes
        fi

        echo "run_calendar=$run" >> $GITHUB_OUTPUT
        echo "RUN_CALENDAR=$run"  >> $GITHUB_ENV   # —É–¥–æ–±–Ω–æ –¥–ª—è if:

    # 3) Python
    - uses: actions/setup-python@v4
      with: {python-version: '3.11'}

    # 4) Deps
    - name: üì¶ Install dependencies
      if: env.RUN_CALENDAR == 'yes'
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    # 5) –ì–µ–Ω–µ—Ä–∞—Ü–∏—è
    - name: üåô Generate lunar_calendar.json
      if: env.RUN_CALENDAR == 'yes'
      env:
        OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
      run: python gen_lunar_calendar.py

    # 6) Commit & push
    - name: ‚úèÔ∏è Commit & push
      if: env.RUN_CALENDAR == 'yes'
      run: |
        git config user.name  "github-actions[bot]"
        git config user.email "github-actions[bot]@users.noreply.github.com"
        git add lunar_calendar.json
        git diff --cached --quiet || {
          git commit -m "chore: update lunar_calendar.json"
          git pull --rebase --autostash || true
          git push
        }

    # 7) Telegram
    - name: üì® Send monthly summary
      if: env.RUN_CALENDAR == 'yes'
      env:
        TELEGRAM_TOKEN: ${{ secrets.TELEGRAM_TOKEN }}
        CHANNEL_ID:     ${{ secrets.CHANNEL_ID }}
      run: python send_monthly_calendar.py
