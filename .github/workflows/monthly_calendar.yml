name: Monthly VayboMeter Calendar (KLD)

on:
  schedule:
    - cron: '0 09 * * *'          # каждый день 10:00 UTC
  workflow_dispatch:
    inputs:
      force_run:
        description: "Запустить независимо от даты"
        default: "false"
        required: false
      to_test:
        description: "Публиковать в тестовый канал?"
        type: boolean
        default: false
        required: false
      channel_override:
        description: "Явный chat_id канала (перебивает параметры выше)"
        type: string
        required: false

permissions:
  contents: write

env:
  TZ: Europe/Kaliningrad

jobs:
  monthly:
    runs-on: ubuntu-latest

    steps:
      # 1. Checkout
      - name: Checkout repo
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      # 2. Решаем, нужен ли расчёт
      - name: Decide run condition
        id: decide
        shell: bash
        run: |
          run=no
          # Завтра первое число → генерируем СЛЕДУЮЩИЙ месяц
          if [[ $(date -d 'tomorrow' +%d) == "01" ]]; then
            run=yes
            work_date=$(date -d "$(date +%Y-%m-01) +1 month" +%Y-%m-%d)
          fi
          # Ручной запуск c force_run=true → текущий месяц
          if [[ "${{ github.event_name }}" == 'workflow_dispatch' && \
                "${{ github.event.inputs.force_run }}" == 'true' ]]; then
            run=yes
            work_date=$(date +%Y-%m-%d)
          fi
          echo "RUN_CALENDAR=$run"  >> $GITHUB_ENV
          echo "WORK_DATE=${work_date:-}" >> $GITHUB_ENV

      # 3. Python
      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      # 4. Deps
      - name: Install dependencies
        if: ${{ env.RUN_CALENDAR == 'yes' }}
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      # 5. Генерация календаря
      - name: Generate lunar_calendar.json
        if: ${{ env.RUN_CALENDAR == 'yes' }}
        env:
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          GEMINI_API_KEY: ${{ secrets.GEMINI_API_KEY }}
          GROQ_API_KEY:   ${{ secrets.GROQ_API_KEY }}
          GEN_SKIP_SHORT: "1"
          DEBUG_VOC:      "1"
          WORK_DATE:      ${{ env.WORK_DATE }}
        run: |
          python <<'PY'
          import os, pendulum, runpy, sys
          wd = os.getenv("WORK_DATE")
          if wd:
              pendulum.today = lambda tz=None: pendulum.parse(wd)
          sys.argv = ["gen_lunar_calendar.py"]
          runpy.run_path("gen_lunar_calendar.py", run_name="__main__")
          PY

      # 6. Commit & push
      - name: Commit & push
        if: ${{ env.RUN_CALENDAR == 'yes' }}
        run: |
          git config user.name  "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git add lunar_calendar.json
          if git diff --cached --quiet; then
            echo "✅ lunar_calendar.json актуален"
          else
            git commit -m "chore: update lunar_calendar.json"
            git pull --rebase --autostash || true
            git push
          fi

     # 7a. Telegram: CY
      - name: Send monthly summary (CY)
        if: ${{ env.RUN_CALENDAR == 'yes' }}
        env:
          TELEGRAM_TOKEN:        ${{ secrets.TELEGRAM_TOKEN }}       # бот Кипра
          CHANNEL_ID_CY:         ${{ secrets.CHANNEL_ID }}           # прод-канал Кипра
          CHANNEL_ID_TEST_CY:    ${{ secrets.CHANNEL_ID_TEST }}      # ТЕСТ-канал Кипра
        shell: bash
        run: |
          set -euo pipefail
          CHAT="${{ github.event.inputs.channel_override }}"
          if [[ -z "$CHAT" ]]; then
            if [[ "${{ github.event.inputs.to_test }}" == 'true' ]]; then
              CHAT="$CHANNEL_ID_TEST_CY"
            else
              CHAT="$CHANNEL_ID_CY"
            fi
          fi
          echo "→ CY chat: $CHAT"
          CHANNEL_ID="$CHAT" CHANNEL_ID_KLG="$CHAT" python send_monthly_calendar.py
      
      # (опционально) хотим, чтобы KLD вышел на час позже
      # - name: Wait 1h before KLD
      #   if: ${{ env.RUN_CALENDAR == 'yes' && github.event.inputs.to_test != 'true' }}
      #   run: sleep 3600
      
      # 7b. Telegram: KLD
      - name: Send monthly summary (KLD)
        if: ${{ env.RUN_CALENDAR == 'yes' }}
        env:
          TELEGRAM_TOKEN:           ${{ secrets.TELEGRAM_TOKEN_KLG }}      # бот Калининграда
          CHANNEL_ID_KLD:           ${{ secrets.CHANNEL_ID_KLG }}          # прод-канал KLD
          CHANNEL_ID_TEST_KLD:      ${{ secrets.CHANNEL_ID_TEST_KLG }}     # ТЕСТ-канал KLD (создайте секрет)
        shell: bash
        run: |
          set -euo pipefail
          CHAT="${{ github.event.inputs.channel_override }}"
          if [[ -z "$CHAT" ]]; then
            if [[ "${{ github.event.inputs.to_test }}" == 'true' ]]; then
              CHAT="$CHANNEL_ID_TEST_KLD"
            else
              CHAT="$CHANNEL_ID_KLD"
            fi
          fi
          echo "→ KLD chat: $CHAT"
          CHANNEL_ID="$CHAT" CHANNEL_ID_KLG="$CHAT" python send_monthly_calendar.py

