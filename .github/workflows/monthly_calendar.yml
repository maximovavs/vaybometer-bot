name: Monthly VayboMeter Calendar

###############################################################################
# 1. –°–æ–±—ã—Ç–∏—è-—Ç—Ä–∏–≥–≥–µ—Ä—ã
###############################################################################
on:
  schedule:
    #   –º–∏–Ω   —á–∞—Å  –¥–µ–Ω—å  –º–µ—Å  –¥–µ–Ω—å-–Ω–µ–¥
    - cron:  '0 10 * * *'          # –∫–∞–∂–¥—ã–π –¥–µ–Ω—å, 10 UTC
  workflow_dispatch:               # ‚Üê –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–∞—è –ø—É—Å—Ç–∞—è —Å—Ç—Ä–æ–∫–∞!
    inputs:
      force_run:
        description: "–°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å –∫–∞–ª–µ–Ω–¥–∞—Ä—å –Ω–∞ —Ç–µ–∫—É—â–∏–π –º–µ—Å—è—Ü (–∏–≥–Ω–æ—Ä–∏—Ä–æ–≤–∞—Ç—å –¥–∞—Ç—É)"
        required: false
        default: "false"

###############################################################################
permissions:
  contents: write
###############################################################################

jobs:
  monthly:
    runs-on: ubuntu-latest

    steps:
    # ------------------------------------------------------------------ 1
    - name: üì• Checkout
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
        persist-credentials: true

    # ------------------------------------------------------------------ 2
    - name: üîç Decide if calendar must be built
      id: decide
      run: |
        run=no
        # (–∞) –∞–≤—Ç–æ–∑–∞–ø—É—Å–∫: —Å—Ç—Ä–æ–∏–º, –µ—Å–ª–∏ –∑–∞–≤—Ç—Ä–∞ 1-–µ
        if [[ "${{ github.event_name }}" == "schedule" ]]; then
          [[ $(date -u -d 'tomorrow' +%d) == 01 ]] && run=yes
        fi
        # (–±) —Ä—É—á–Ω–æ–π run + force_run=true
        if [[ "${{ github.event_name }}" == "workflow_dispatch" && \
              "${{ github.event.inputs.force_run }}" == "true" ]]; then
          run=yes
        fi
        echo "RUN_CALENDAR=$run" >>"$GITHUB_ENV"

    # ------------------------------------------------------------------ 3
    - name: üêç Setup Python
      if: env.RUN_CALENDAR == 'yes'
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'

    # ------------------------------------------------------------------ 4
    - name: üì¶ Install dependencies
      if: env.RUN_CALENDAR == 'yes'
      run: |
        python -m pip install -U pip
        pip install -r requirements.txt

    # ------------------------------------------------------------------ 5
    - name: üåô Generate lunar_calendar.json
      if: env.RUN_CALENDAR == 'yes'
      env:
        OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
      run: |
        # ‚Üí –∞–≤—Ç–æ–∑–∞–ø—É—Å–∫: –∑–∞–≤—Ç—Ä–∞ 1-–µ ‚Üí –±–µ—Ä—ë–º —Å–ª–µ–¥—É—é—â–∏–π –º–µ—Å—è—Ü
        # ‚Üí —Ä—É—á–Ω–æ–π    : –≤—Å–µ–≥–¥–∞ —Ç–µ–∫—É—â–∏–π –º–µ—Å—è—Ü
        if [[ "${{ github.event_name }}" == "schedule" ]]; then
          WORK_DATE=$(date -u -d 'tomorrow' +%Y-%m-01)
        else
          WORK_DATE=$(date -u +%Y-%m-01)
        fi

        python - <<'PY'
import os, pendulum, runpy, sys
pendulum.today = lambda tz=None: pendulum.parse(os.environ["WORK_DATE"])
sys.argv = ["gen_lunar_calendar.py"]
runpy.run_path("gen_lunar_calendar.py", run_name="__main__")
PY

    # ------------------------------------------------------------------ 6
    - name: ‚úèÔ∏è Commit & push
      if: env.RUN_CALENDAR == 'yes'
      run: |
        git config user.name  "github-actions[bot]"
        git config user.email "github-actions[bot]@users.noreply.github.com"
        git add lunar_calendar.json
        if git diff --cached --quiet; then
          echo "‚úÖ –§–∞–π–ª —É–∂–µ –∞–∫—Ç—É–∞–ª–µ–Ω"
        else
          git commit -m "chore: update lunar_calendar.json"
          git pull --rebase --autostash || true
          git push
        fi

    # ------------------------------------------------------------------ 7
    - name: üì® Send monthly summary
      if: env.RUN_CALENDAR == 'yes'
      env:
        TELEGRAM_TOKEN: ${{ secrets.TELEGRAM_TOKEN }}
        CHANNEL_ID:     ${{ secrets.CHANNEL_ID }}
      run: python send_monthly_calendar.py
