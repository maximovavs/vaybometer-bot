name: Monthly VayboMeter Calendar

on:
  schedule:
    - cron: '0 10 * * *'     # –µ–∂–µ–¥–Ω–µ–≤–Ω–æ 10:00 UTC
  workflow_dispatch:
    inputs:
      force_run:
        description: "–ó–∞–ø—É—Å—Ç–∏—Ç—å –Ω–µ–∑–∞–≤–∏—Å–∏–º–æ –æ—Ç –¥–∞—Ç—ã"
        default: "false"
        required: false

permissions:
  contents: write

env:
  TZ: Asia/Nicosia

concurrency:
  group: monthly-calendar-${{ github.ref }}
  cancel-in-progress: false

jobs:
  monthly_calendar:
    runs-on: ubuntu-latest

    steps:
      - name: üõéÔ∏è Checkout
        uses: actions/checkout@v4

      - name: üêç Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: üì¶ Install deps
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: üìÖ Decide if we should run today
        id: gate
        env:
          FORCE: ${{ github.event.inputs.force_run }}
        run: |
          D=$(date +%d)       # —É—á–∏—Ç—ã–≤–∞–µ—Ç TZ –∏–∑ env
          if [[ "$FORCE" == "true" || "$D" == "01" ]]; then
            echo "RUN_CALENDAR=yes" >> $GITHUB_ENV
            echo "‚ÑπÔ∏è Calendar run: YES"
          else
            echo "RUN_CALENDAR=no"  >> $GITHUB_ENV
            echo "‚ÑπÔ∏è Calendar run: NO"
          fi

      - name: üåô Generate lunar_calendar.json
        if: env.RUN_CALENDAR == 'yes'
        run: python gen_lunar_calendar.py

      - name: üíæ Commit updates (if any)
        if: env.RUN_CALENDAR == 'yes'
        run: |
          git config user.name  "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git add lunar_calendar.json
          if git diff --cached --quiet; then
            echo "‚úÖ lunar_calendar.json –∞–∫—Ç—É–∞–ª–µ–Ω"
          else
            git commit -m "chore: update lunar_calendar.json"
            git pull --rebase --autostash || true
            git push
          fi

      - name: üì® Send monthly summary
        if: env.RUN_CALENDAR == 'yes'
        env:
          TELEGRAM_TOKEN: ${{ secrets.TELEGRAM_TOKEN }}
          CHANNEL_ID:     ${{ secrets.CHANNEL_ID }}
        run: python send_monthly_calendar.py
