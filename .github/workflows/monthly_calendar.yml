name: Monthly VayboMeter Calendar

###############################################################################
# 1.  –¢—Ä–∏–≥–≥–µ—Ä—ã
###############################################################################
on:
  schedule:
    - cron: '0 10 * * *'          # –∫–∞–∂–¥—ã–π –¥–µ–Ω—å 10:00 UTC
  workflow_dispatch:
    inputs:
      force_run:
        description: "–°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å –∫–∞–ª–µ–Ω–¥–∞—Ä—å –¥–ª—è —Ç–µ–∫—É—â–µ–≥–æ –º–µ—Å—è—Ü–∞"
        required: false
        default: "false"

###############################################################################
permissions:
  contents: write
###############################################################################

jobs:
  monthly:
    runs-on: ubuntu-latest

    steps:
    # -------------------------------------------------------------------------
    # 2.  Checkout
    # -------------------------------------------------------------------------
    - name: üì• Checkout
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
        persist-credentials: true

    # -------------------------------------------------------------------------
    # 3.  –†–µ—à–∞–µ–º, –Ω—É–∂–Ω–æ –ª–∏ –∑–∞–ø—É—Å–∫–∞—Ç—å –≥–µ–Ω–µ—Ä–∞—Ç–æ—Ä
    # -------------------------------------------------------------------------
    - name: üîç Decide if calendar must be built
      id:   decide
      run: |
        run=no
        # 3-a. cron-–≤–µ—Ç–∫–∞: —Å—Ç—Ä–æ–∏–º —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ –∑–∞–≤—Ç—Ä–∞ 1-–µ
        if [[ "${{ github.event_name }}" == "schedule" ]]; then
          [[ $(date -u -d 'tomorrow' +%d) == "01" ]] && run=yes
        fi
        # 3-b. —Ä—É—á–Ω–æ–π –∑–∞–ø—É—Å–∫ —Å force_run=true
        if [[ "${{ github.event_name }}" == "workflow_dispatch" && \
              "${{ github.event.inputs.force_run }}" == "true" ]]; then
          run=yes
        fi
        echo "run_calendar=$run"           >> $GITHUB_OUTPUT
        echo "RUN_CALENDAR=$run"           >> $GITHUB_ENV

    # -------------------------------------------------------------------------
    # 4.  –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º Python
    # -------------------------------------------------------------------------
    - name: üêç Setup Python
      if:   env.RUN_CALENDAR == 'yes'
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'

    # -------------------------------------------------------------------------
    # 5.  –°—Ç–∞–≤–∏–º –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏
    # -------------------------------------------------------------------------
    - name: üì¶ Install dependencies
      if:   env.RUN_CALENDAR == 'yes'
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    # -------------------------------------------------------------------------
    # 6.  –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º JSON-–∫–∞–ª–µ–Ω–¥–∞—Ä—å
    #     ‚Ä¢ –≤ –ø–æ—Å–ª–µ–¥–Ω–∏–π –¥–µ–Ω—å –º–µ—Å—è—Ü–∞ ‚Üí Œî1 –¥–µ–Ω—å = —Å–ª–µ–¥—É—é—â–∏–π –º–µ—Å—è—Ü
    #     ‚Ä¢ force_run=true          ‚Üí —Ç–µ–∫—É—â–∏–π –º–µ—Å—è—Ü
    # -------------------------------------------------------------------------
    - name: üåô Build lunar_calendar.json
      if:   env.RUN_CALENDAR == 'yes'
      env:
        OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
      run: |
        # –û–ø—Ä–µ–¥–µ–ª—è–µ–º ¬´—Ä–∞–±–æ—á—É—é¬ª –¥–∞—Ç—É, –∫–æ—Ç–æ—Ä—É—é –ø–µ—Ä–µ–¥–∞–¥–∏–º —Å–∫—Ä–∏–ø—Ç—É
        if [[ "${{ github.event_name }}" == "schedule" ]]; then
          # –¥–ª—è cron-–∑–∞–ø—É—Å–∫–∞ –±–µ—Ä—ë–º –∑–∞–≤—Ç—Ä–∞—à–Ω—é—é –¥–∞—Ç—É (—Å–ª–µ–¥—É—é—â–∏–π –º–µ—Å—è—Ü)
          WORK_DATE=$(date -u -d 'tomorrow' '+%Y-%m-01')
        else
          # —Ä—É—á–Ω–æ–π –∑–∞–ø—É—Å–∫ ‚Üí —Å–µ–≥–æ–¥–Ω—è—à–Ω–µ–µ —á–∏—Å–ª–æ
          WORK_DATE=$(date -u '+%Y-%m-01')
        fi

        echo "::group::DEBUG date"
        echo "WORK_DATE = $WORK_DATE"
        echo "::endgroup::"

        # –û–¥–∏–Ω –æ–¥–Ω–æ—Å—Ç—Ä–æ—á–Ω—ã–π python: ¬´–ø–æ–¥–º–µ–Ω—è–µ–º¬ª today()
        python - <<'PY'
import os, pendulum, importlib.util, runpy, sys
# –¥–∞—Ç–∞, –∫–æ—Ç–æ—Ä—É—é –º—ã —Ö–æ—Ç–∏–º —Å—á–∏—Ç–∞—Ç—å ¬´—Å–µ–≥–æ–¥–Ω—è¬ª
target = pendulum.parse(os.environ["WORK_DATE"])
# –º–∞–ª–µ–Ω—å–∫–∏–π —Ö–∞–∫: –ø–µ—Ä–µ–æ–ø—Ä–µ–¥–µ–ª—è–µ–º pendulum.today() –ø–µ—Ä–µ–¥ import-–æ–º –º–æ–¥—É–ª—è
pendulum.today = lambda tz=None: target
sys.argv = ["gen_lunar_calendar.py"]       # —á—Ç–æ–±—ã —Å–∫—Ä–∏–ø—Ç —Å—á–∏—Ç–∞–ª, —á—Ç–æ –µ–≥–æ –≤—ã–∑–≤–∞–ª–∏ –Ω–∞–ø—Ä—è–º—É—é
runpy.run_path("gen_lunar_calendar.py", run_name="__main__")
PY

    # -------------------------------------------------------------------------
    # 7.  Commit & push
    # -------------------------------------------------------------------------
    - name: ‚úèÔ∏è Commit & push
      if:   env.RUN_CALENDAR == 'yes'
      run: |
        git config user.name  "github-actions[bot]"
        git config user.email "github-actions[bot]@users.noreply.github.com"

        git add lunar_calendar.json
        if git diff --cached --quiet; then
          echo "‚úÖ lunar_calendar.json —É–∂–µ –∞–∫—Ç—É–∞–ª–µ–Ω"
        else
          git commit -m "chore: update lunar_calendar.json"
          # –∑–∞—â–∏—â–∞–µ–º—Å—è –æ—Ç –≥–æ–Ω–æ–∫
          git pull --rebase --autostash || true
          git push
        fi

    # -------------------------------------------------------------------------
    # 8.  Telegram ‚Äî –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –º–µ—Å—è—á–Ω—ã–π –æ—Ç—á—ë—Ç
    # -------------------------------------------------------------------------
    - name: üì® Send monthly summary
      if:   env.RUN_CALENDAR == 'yes'
      env:
        TELEGRAM_TOKEN: ${{ secrets.TELEGRAM_TOKEN }}
        CHANNEL_ID:     ${{ secrets.CHANNEL_ID }}
      run: python send_monthly_calendar.py
