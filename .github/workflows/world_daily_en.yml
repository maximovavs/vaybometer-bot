name: world-daily-en

on:
  schedule:
    - cron: "15 7 * * *"     # 07:15 UTC
  workflow_dispatch:
    inputs:
      send_to_test:
        type: boolean
        description: "Send to TEST channel instead of main"
        default: false

jobs:
  run:
    runs-on: ubuntu-latest
    env:
      TZ: UTC
      PYTHONPATH: ${{ github.workspace }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"
          cache: pip
          cache-dependency-path: requirements.txt

      - name: Install deps
        run: |
          set -euo pipefail
          python -m pip install --upgrade pip
          pip install -r requirements.txt jinja2 pytz

      - name: Collect daily
        env:
          YT_API_KEY:            ${{ secrets.YT_API_KEY }}
          YT_CHANNEL_ID:         ${{ secrets.YT_CHANNEL_ID }}
          YOUTUBE_PLAYLIST_IDS:  ${{ secrets.YOUTUBE_PLAYLIST_IDS }}
          FALLBACK_NATURE_LIST:  ${{ secrets.FALLBACK_NATURE_LIST }}
        run: |
          set -euo pipefail
          # –ü—ã—Ç–∞–µ–º—Å—è —Å —è–≤–Ω—ã–º –ø—É—Ç—ë–º, –µ—Å–ª–∏ –Ω–µ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç—Å—è ‚Äî –∫–∞–∫ –µ—Å—Ç—å.
          python world_en/world_collect.py --out world_en/daily.json || python world_en/world_collect.py || true
          echo "---- ls world_en ----"; ls -la world_en || true

      - name: Locate/copy daily*.json -> world_en/daily.json
        run: |
          set -euo pipefail
          python - <<'PY'
          import glob, os, shutil, json, sys
          cands = (glob.glob('world_en/daily*.json') +
                   glob.glob('world_en/*daily*.json') +
                   glob.glob('world_en/*/daily*.json'))
          print("CANDIDATES:", cands)
          if cands:
            # –±–µ—Ä—ë–º —Å–∞–º—ã–π –±–æ–ª—å—à–æ–π —Ñ–∞–π–ª (—Å–∫–æ—Ä–µ–µ –≤—Å–µ–≥–æ –ø–æ–ª–Ω—ã–π) –∫–∞–∫ –∏—Å—Ç–æ—á–Ω–∏–∫ –∏—Å—Ç–∏–Ω—ã
            cands = [c for c in cands if os.path.isfile(c)]
            cands.sort(key=lambda p: (os.path.getsize(p), p))
            src = cands[-1]
            os.makedirs('world_en', exist_ok=True)
            shutil.copyfile(src, 'world_en/daily.json')
            print("Picked", src, "-> world_en/daily.json")
          else:
            # —Å–æ–∑–¥–∞—ë–º –º–∏–Ω–∏–º–∞–ª—å–Ω—ã–π —Å–∫–µ–ª–µ—Ç, —á—Ç–æ–±—ã –ø–∞–π–ø–ª–∞–π–Ω –Ω–µ –ø–∞–¥–∞–ª
            d = {
              "NATURE_THUMB": "", "NATURE_URL": "",
              "NATURE_TITLE": "Nature Break", "NATURE_SNIPPET": "60 seconds of calm",
              # –æ—Å—Ç–∞–ª—å–Ω–æ–µ –ø—É—Å—Ç—å –æ—Å—Ç–∞—ë—Ç—Å—è –ø—É—Å—Ç—ã–º ‚Äî —à–∞–±–ª–æ–Ω –¥–æ–ª–∂–µ–Ω –ø–µ—Ä–µ–∂–∏—Ç—å
            }
            os.makedirs('world_en', exist_ok=True)
            with open('world_en/daily.json', 'w', encoding='utf-8') as f:
              json.dump(d, f, ensure_ascii=False)
            print("No candidate daily*.json found ‚Äî wrote minimal world_en/daily.json")
          PY
          test -f world_en/daily.json

      - name: Render message
        run: |
          set -euo pipefail
          python world_en/render.py world_en/templates/daily_en.j2 world_en/daily.json > world_en/message.txt
          echo "---- preview ----"
          sed -n '1,120p' world_en/message.txt || true

      - name: Ensure artifacts exist
        run: |
          set -euo pipefail
          test -s world_en/daily.json || { echo "daily.json missing or empty"; exit 1; }
          test -s world_en/message.txt || { echo "message.txt missing or empty"; exit 1; }

      - name: Upload debug artifacts
        if: ${{ always() }}
        uses: actions/upload-artifact@v4
        with:
          name: world_en-artifacts
          path: |
            world_en/daily.json
            world_en/message.txt

      # ===== MAIN channel =====
      - name: Send text (MAIN)
        if: ${{ inputs.send_to_test != true }}
        env:
          TG_TOKEN: ${{ secrets.TELEGRAM_BOT_TOKEN_EN }}
          TG_CHAT:  ${{ secrets.TELEGRAM_CHAT_ID_EN }}
        run: |
          set -euo pipefail
          curl -s -X POST "https://api.telegram.org/bot${TG_TOKEN}/sendMessage" \
            -d chat_id="${TG_CHAT}" -d parse_mode="HTML" \
            --data-urlencode text@"world_en/message.txt"

      - name: Send Nature card (MAIN)
        if: ${{ inputs.send_to_test != true }}
        env:
          TG_TOKEN: ${{ secrets.TELEGRAM_BOT_TOKEN_EN }}
          TG_CHAT:  ${{ secrets.TELEGRAM_CHAT_ID_EN }}
        run: |
          set -euo pipefail
          readarray -t L < <(python - <<'PY'
          import json
          d=json.load(open('world_en/daily.json',encoding='utf-8'))
          print(d.get('NATURE_THUMB',''))
          print(d.get('NATURE_URL',''))
          title=d.get('NATURE_TITLE','Nature Break')
          snip =d.get('NATURE_SNIPPET','60 seconds of calm')
          print(f"üåä <b>{title}</b>\n<i>{snip}</i>")
          PY
          )
          THUMB="${L[0]}"; URL="${L[1]}"; CAPTION="${L[*]:2}"
          if [ -n "$THUMB" ] && [ -n "$URL" ]; then
            curl -s "https://api.telegram.org/bot${TG_TOKEN}/sendPhoto" \
              -F chat_id="${TG_CHAT}" \
              -F photo="${THUMB}" \
              -F parse_mode="HTML" \
              -F caption="$CAPTION" \
              -F reply_markup='{"inline_keyboard":[[{"text":"‚ñ∂Ô∏è Watch on YouTube","url":"'"$URL"'"}]]}'
          elif [ -n "$URL" ]; then
            curl -s -X POST "https://api.telegram.org/bot${TG_TOKEN}/sendMessage" \
              -d chat_id="${TG_CHAT}" \
              -d text="$URL" \
              -d disable_web_page_preview=false
          else
            echo "No nature URL in daily.json ‚Äî skipping card."
          fi

      # ===== TEST channel =====
      - name: Send text (TEST)
        if: ${{ inputs.send_to_test == true }}
        env:
          TG_TOKEN: ${{ secrets.TELEGRAM_TOKEN_TEST }}
          TG_CHAT:  ${{ secrets.CHANNEL_ID_TEST }}
        run: |
          set -euo pipefail
          [ -n "${TG_CHAT}" ] || { echo "TEST chat id is empty"; exit 1; }
          curl -s -X POST "https://api.telegram.org/bot${TG_TOKEN}/sendMessage" \
            -d chat_id="${TG_CHAT}" -d parse_mode="HTML" \
            --data-urlencode text@"world_en/message.txt"

      - name: Send Nature card (TEST)
        if: ${{ inputs.send_to_test == true }}
        env:
          TG_TOKEN: ${{ secrets.TELEGRAM_TOKEN_TEST }}
          TG_CHAT:  ${{ secrets.CHANNEL_ID_TEST }}
        run: |
          set -euo pipefail
          readarray -t L < <(python - <<'PY'
          import json
          d=json.load(open('world_en/daily.json',encoding='utf-8'))
          print(d.get('NATURE_THUMB',''))
          print(d.get('NATURE_URL',''))
          title=d.get('NATURE_TITLE','Nature Break')
          snip =d.get('NATURE_SNIPPET','60 seconds of calm')
          print(f"üåä <b>{title}</b>\n<i>{snip}</i>")
          PY
          )
          THUMB="${L[0]}"; URL="${L[1]}"; CAPTION="${L[*]:2}"
          [ -n "${TG_CHAT}" ] || { echo "TEST chat id is empty"; exit 1; }
          if [ -n "$THUMB" ] && [ -n "$URL" ]; then
            curl -s "https://api.telegram.org/bot${TG_TOKEN}/sendPhoto" \
              -F chat_id="${TG_CHAT}" \
              -F photo="${THUMB}" \
              -F parse_mode="HTML" \
              -F caption="$CAPTION" \
              -F reply_markup='{"inline_keyboard":[[{"text":"‚ñ∂Ô∏è Watch on YouTube","url":"'"$URL"'"}]]}'
          elif [ -n "$URL" ]; then
            curl -s -X POST "https://api.telegram.org/bot${TG_TOKEN}/sendMessage" \
              -d chat_id="${TG_CHAT}" \
              -d text="$URL" \
              -d disable_web_page_preview=false
          else
            echo "No nature URL in daily.json ‚Äî skipping card."
          fi
