name: world-daily-en

on:
  schedule:
    - cron: "15 7 * * *"   # 07:15 UTC
  workflow_dispatch:
    inputs:
      send_to_test:
        type: boolean
        description: "Send to TEST channel instead of main"
        default: false

jobs:
  run:
    runs-on: ubuntu-latest
    concurrency:
      group: world-daily-en
      cancel-in-progress: true
    defaults:
      run:
        shell: bash
    env:
      TZ: UTC
      PYTHONPATH: ${{ github.workspace }}
      PYTHONUNBUFFERED: "1"

    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-python@v5
        with:
          python-version: "3.11"
          cache: pip
          cache-dependency-path: requirements.txt

      - name: Install deps (from requirements + jinja2)
        run: |
          set -euo pipefail
          python -m pip install --upgrade pip
          pip install -r requirements.txt jinja2

      - name: Collect daily
        env:
          YT_API_KEY:            ${{ secrets.YT_API_KEY }}
          YT_CHANNEL_ID:         ${{ secrets.YT_CHANNEL_ID }}
          YOUTUBE_PLAYLIST_IDS:  ${{ secrets.YOUTUBE_PLAYLIST_IDS }}
          FALLBACK_NATURE_LIST:  ${{ secrets.FALLBACK_NATURE_LIST }}
        run: |
          set -euo pipefail

          # 1) –ü—ã—Ç–∞–µ–º—Å—è —Å–æ—Ö—Ä–∞–Ω–∏—Ç—å —è–≤–Ω–æ –≤ world_en/daily.json
          python world_en/world_collect.py --out world_en/daily.json || true

          # 2) –§–æ–ª–±—ç–∫ ‚Äî –±–µ–∑ –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤ (–µ—Å–ª–∏ —Å–∫—Ä–∏–ø—Ç —Ç–∞–∫ —Ä–∞–±–æ—Ç–∞–µ—Ç)
          if [ ! -f world_en/daily.json ]; then
            python world_en/world_collect.py || true
          fi

          # 3) –ü–æ–ø—Ä–æ–±—É–µ–º –ø–æ–¥–æ–±—Ä–∞—Ç—å —Ñ–∞–π–ª, –µ—Å–ª–∏ –æ–Ω —Å–æ–∑–¥–∞–Ω –≤ –¥—Ä—É–≥–æ–º –º–µ—Å—Ç–µ
          if [ ! -f world_en/daily.json ]; then
            if   [ -f ./daily.json ]; then mv ./daily.json world_en/daily.json
            elif [ -f world_en/daily_en.json ]; then mv world_en/daily_en.json world_en/daily.json
            elif [ -f world/daily.json ]; then mv world/daily.json world_en/daily.json
            fi
          fi

          # 4) –ü–æ—Å–ª–µ–¥–Ω–∏–π —à–∞–Ω—Å: —Å–¥–µ–ª–∞—Ç—å –±–µ–∑–æ–ø–∞—Å–Ω—É—é –∑–∞–≥–ª—É—à–∫—É, —á—Ç–æ–±—ã —Ä–µ–Ω–¥–µ—Ä –Ω–µ –ø–∞–¥–∞–ª
          if [ ! -f world_en/daily.json ]; then
            echo '{"HEADLINE":"Daily digest","LINES":[],"NATURE_THUMB":"","NATURE_URL":"","NATURE_TITLE":"Nature Break","NATURE_SNIPPET":"60 seconds of calm"}' > world_en/daily.json
          fi

          echo "---- ls world_en ----"
          ls -la world_en
          test -f world_en/daily.json || { echo "ERROR: world_en/daily.json missing"; exit 1; }

      - name: Render
        run: |
          set -euo pipefail
          python world_en/render.py world_en/templates/daily_en.j2 world_en/daily.json > world_en/message.txt
          # –µ—Å–ª–∏ —à–∞–±–ª–æ–Ω –Ω–µ–æ–∂–∏–¥–∞–Ω–Ω–æ –ø—É—Å—Ç ‚Äî –Ω–µ–±–æ–ª—å—à–∞—è –ø–æ–¥—Å—Ç—Ä–∞—Ö–æ–≤–∫–∞
          if [ ! -s world_en/message.txt ]; then
            echo "Good morning! (fallback message)" > world_en/message.txt
          fi

      # ========== MAIN channel ==========
      - name: Send text (MAIN)
        if: ${{ github.event.inputs.send_to_test != 'true' }}
        env:
          TG_TOKEN: ${{ secrets.TELEGRAM_BOT_TOKEN_EN }}
          TG_CHAT:  ${{ secrets.TELEGRAM_CHAT_ID_EN }}
        run: |
          set -euo pipefail
          curl -s -X POST "https://api.telegram.org/bot${TG_TOKEN}/sendMessage" \
            -d chat_id="${TG_CHAT}" -d parse_mode="HTML" \
            --data-urlencode text@"world_en/message.txt"

      - name: Send Nature card (MAIN)
        if: ${{ github.event.inputs.send_to_test != 'true' }}
        env:
          TG_TOKEN: ${{ secrets.TELEGRAM_BOT_TOKEN_EN }}
          TG_CHAT:  ${{ secrets.TELEGRAM_CHAT_ID_EN }}
        run: |
          set -euo pipefail
          THUMB="$(jq -r '.NATURE_THUMB // ""' world_en/daily.json || true)"
          URL="$(jq -r '.NATURE_URL // ""' world_en/daily.json || true)"
          TITLE="$(jq -r '.NATURE_TITLE // "Nature Break"' world_en/daily.json || true)"
          SNIP="$(jq -r '.NATURE_SNIPPET // "60 seconds of calm"' world_en/daily.json || true)"
          CAPTION="üåä <b>${TITLE}</b>\n<i>${SNIP}</i>"

          if [ -n "$THUMB" ] && [ -n "$URL" ]; then
            curl -s "https://api.telegram.org/bot${TG_TOKEN}/sendPhoto" \
              -F chat_id="${TG_CHAT}" \
              -F photo="${THUMB}" \
              -F parse_mode="HTML" \
              -F caption="$CAPTION" \
              -F reply_markup='{"inline_keyboard":[[{"text":"‚ñ∂Ô∏è Watch on YouTube","url":"'"$URL"'"}]]}'
          elif [ -n "$URL" ]; then
            curl -s -X POST "https://api.telegram.org/bot${TG_TOKEN}/sendMessage" \
              -d chat_id="${TG_CHAT}" \
              -d text="$URL" \
              -d disable_web_page_preview=false
          else
            echo "No nature URL in daily.json ‚Äî skipping card."
          fi

      # ========== TEST channel ==========
      - name: Send text (TEST)
        if: ${{ github.event.inputs.send_to_test == 'true' }}
        env:
          TG_TOKEN: ${{ secrets.TELEGRAM_TOKEN_TEST }}
          TG_CHAT:  ${{ secrets.CHANNEL_ID_TEST }}
        run: |
          set -euo pipefail
          if [ -z "${TG_CHAT}" ]; then echo "TEST chat id is empty"; exit 1; fi
          curl -s -X POST "https://api.telegram.org/bot${TG_TOKEN}/sendMessage" \
            -d chat_id="${TG_CHAT}" -d parse_mode="HTML" \
            --data-urlencode text@"world_en/message.txt"

      - name: Send Nature card (TEST)
        if: ${{ github.event.inputs.send_to_test == 'true' }}
        env:
          TG_TOKEN: ${{ secrets.TELEGRAM_TOKEN_TEST }}
          TG_CHAT:  ${{ secrets.CHANNEL_ID_TEST }}
        run: |
          set -euo pipefail
          THUMB="$(jq -r '.NATURE_THUMB // ""' world_en/daily.json || true)"
          URL="$(jq -r '.NATURE_URL // ""' world_en/daily.json || true)"
          TITLE="$(jq -r '.NATURE_TITLE // "Nature Break"' world_en/daily.json || true)"
          SNIP="$(jq -r '.NATURE_SNIPPET // "60 seconds of calm"' world_en/daily.json || true)"
          CAPTION="üåä <b>${TITLE}</b>\n<i>${SNIP}</i>"

          if [ -z "${TG_CHAT}" ]; then echo "TEST chat id is empty"; exit 1; fi
          if [ -n "$THUMB" ] && [ -n "$URL" ]; then
            curl -s "https://api.telegram.org/bot${TG_TOKEN}/sendPhoto" \
              -F chat_id="${TG_CHAT}" \
              -F photo="${THUMB}" \
              -F parse_mode="HTML" \
              -F caption="$CAPTION" \
              -F reply_markup='{"inline_keyboard":[[{"text":"‚ñ∂Ô∏è Watch on YouTube","url":"'"$URL"'"}]]}'
          elif [ -n "$URL" ]; then
            curl -s -X POST "https://api.telegram.org/bot${TG_TOKEN}/sendMessage" \
              -d chat_id="${TG_CHAT}" \
              -d text="$URL" \
              -d disable_web_page_preview=false
          else
            echo "No nature URL in daily.json ‚Äî skipping card."
          fi

      - name: Upload artifacts on failure
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: world-daily-en-debug
          path: |
            world_en/daily.json
            world_en/message.txt
            world_en/world_collect.py
            world_en/templates/daily_en.j2
            world_en/*.py
