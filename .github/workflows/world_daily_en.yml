name: world-daily-en

on:
  schedule:
    - cron: "15 7 * * *"   # 07:15 UTC
  workflow_dispatch:
    inputs:
      send_to_test:
        description: "Post ONLY to TEST channel"
        type: boolean
        default: false

jobs:
  run:
    runs-on: ubuntu-latest
    env:
      TZ: UTC
      PYTHONPATH: ${{ github.workspace }}

    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install deps
        run: pip install jinja2 requests astral pytz

      - name: Collect daily (json)
        env:
          YT_API_KEY:            ${{ secrets.YT_API_KEY }}
          YT_CHANNEL_ID:         ${{ secrets.YT_CHANNEL_ID }}
          YOUTUBE_PLAYLIST_IDS:  ${{ secrets.YOUTUBE_PLAYLIST_IDS }}
          FALLBACK_NATURE_LIST:  ${{ secrets.FALLBACK_NATURE_LIST }}
        run: |
          set -euo pipefail
          python world_en/world_collect.py
          echo "---- ls repo root ----"; ls -la
          echo "---- ls world_en ----"; ls -la world_en || true
          test -f world_en/daily.json || (echo "ERROR: world_en/daily.json was not created" >&2; exit 1)
          echo "WROTE daily.json, first 400 bytes ↓"
          head -c 400 world_en/daily.json || true
          echo

      - name: Render snapshot text
        run: python world_en/render.py world_en/templates/daily_en.j2 world_en/daily.json > world_en/message.txt

      # Выбираем ЦЕЛЕВОЙ чат (main vs test)
      - name: Choose target chat
        id: choose
        env:
          CHAT_MAIN: ${{ secrets.TELEGRAM_CHAT_ID_EN }}
          CHAT_TEST: ${{ secrets.TELEGRAM_CHAT_ID_TEST }}
        run: |
          if [[ "${{ github.event_name }}" == "workflow_dispatch" && "${{ inputs.send_to_test }}" == "true" ]]; then
            echo "chat=${CHAT_TEST}" >> $GITHUB_OUTPUT
          else
            echo "chat=${CHAT_MAIN}" >> $GITHUB_OUTPUT
          fi

      - name: Send snapshot
        env:
          TG_TOKEN: ${{ secrets.TELEGRAM_BOT_TOKEN_EN }}
          CHAT:     ${{ steps.choose.outputs.chat }}
        run: |
          curl -s -X POST "https://api.telegram.org/bot${TG_TOKEN}/sendMessage" \
            -d chat_id="${CHAT}" -d parse_mode="HTML" \
            --data-urlencode text@"world_en/message.txt"

      # Второе сообщение: ссылка на самое просматриваемое видео за 48 часов (если есть)
      - name: Send nature link (card-style preview)
        env:
          TG_TOKEN: ${{ secrets.TELEGRAM_BOT_TOKEN_EN }}
          CHAT:     ${{ steps.choose.outputs.chat }}
        run: |
          URL=$(jq -r '.NATURE_URL // ""' world_en/daily.json)
          if [ -n "$URL" ]; then
            # отправляем ТОЛЬКО ссылку — Telegram сам подтянет заголовок/описание и сделает большую карточку
            curl -s -X POST "https://api.telegram.org/bot${TG_TOKEN}/sendMessage" \
              -d chat_id="${CHAT}" \
              -d disable_web_page_preview=false \
              --data-urlencode text="$URL"
          else
            echo "No NATURE_URL in daily.json — skipping."
          fi