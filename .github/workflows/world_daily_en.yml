name: world-daily-en

on:
  schedule:
    - cron: "15 7 * * *"   # 07:15 UTC
  workflow_dispatch:
    inputs:
      send_to_test:
        type: boolean
        description: "Send to TEST channel instead of main"
        default: false

jobs:
  run:
    runs-on: ubuntu-latest
    env:
      TZ: UTC
      PYTHONPATH: ${{ github.workspace }}

    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-python@v5
        with:
          python-version: "3.11"
          cache: pip
          cache-dependency-path: requirements.txt

      - name: Install dependencies
        run: |
          set -euo pipefail
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Collect daily
        env:
          YT_API_KEY:            ${{ secrets.YT_API_KEY }}
          YT_CHANNEL_ID:         ${{ secrets.YT_CHANNEL_ID }}
          YOUTUBE_PLAYLIST_IDS:  ${{ secrets.YOUTUBE_PLAYLIST_IDS }}
          FALLBACK_NATURE_LIST:  ${{ secrets.FALLBACK_NATURE_LIST }}
        run: |
          set -euo pipefail
          # –ï—Å–ª–∏ –∫–æ–ª–ª–µ–∫—Ç–æ—Ä —É–ø–∞–¥—ë—Ç ‚Äî –ø—Ä–æ–¥–æ–ª–∂–∞–µ–º, –¥–∞–ª—å—à–µ —Å–¥–µ–ª–∞–µ–º —Ñ–æ–ª–±—ç–∫
          python world_en/world_collect.py || true
          echo "---- after collect ----"
          ls -la world_en || true

      - name: Ensure daily.json (fallback if missing)
        run: |
          set -euo pipefail
          if [ ! -f world_en/daily.json ]; then
            echo "Collector did not create world_en/daily.json ‚Äî creating minimal fallback."
            python -c "import json,os; d={'TITLE':'World Vibe Snapshot','WHEN_UTC':'','KP':None,'KP_STATUS':'','SCHUMANN_FREQ':None,'SCHUMANN_STATUS':'baseline (7.83 Hz)','SOLAR_WIND_SPEED':None,'SOLAR_WIND_DENSITY':None,'EARTH_HOTTEST_CITY':'','EARTH_HOTTEST_TEMP_C':None,'EARTH_COLDEST_CITY':'','EARTH_COLDEST_TEMP_C':None,'QUAKE_TITLE':'','QUAKE_DEPTH_KM':None,'QUAKE_TIME_UTC':'','SUN_TIDBIT':'','SUN_TIDBIT_TIME_UTC':'','VIBE_TIP':'','VIBE_TIP_SRC':'','NATURE_THUMB':'','NATURE_URL':'','NATURE_TITLE':'Nature Break','NATURE_SNIPPET':'60 seconds of calm'}; open('world_en/daily.json','w',encoding='utf-8').write(json.dumps(d,ensure_ascii=False,indent=2))"
          fi
          test -f world_en/daily.json

      - name: Render
        run: |
          set -euo pipefail
          python world_en/render.py world_en/templates/daily_en.j2 world_en/daily.json > world_en/message.txt
          test -s world_en/message.txt

      # ========== MAIN ==========
      - name: Send text (MAIN)
        if: ${{ inputs.send_to_test != true }}
        env:
          TG_TOKEN: ${{ secrets.TELEGRAM_BOT_TOKEN_EN }}
          TG_CHAT:  ${{ secrets.TELEGRAM_CHAT_ID_EN }}
        run: |
          set -euo pipefail
          curl -s -X POST "https://api.telegram.org/bot${TG_TOKEN}/sendMessage" \
            -d chat_id="${TG_CHAT}" -d parse_mode="HTML" \
            --data-urlencode text@"world_en/message.txt"

      - name: Send Nature card (MAIN)
        if: ${{ inputs.send_to_test != true }}
        env:
          TG_TOKEN: ${{ secrets.TELEGRAM_BOT_TOKEN_EN }}
          TG_CHAT:  ${{ secrets.TELEGRAM_CHAT_ID_EN }}
        run: |
          set -euo pipefail
          mapfile -t L < <(python -c 'import json; d=json.load(open("world_en/daily.json",encoding="utf-8")); print(d.get("NATURE_THUMB","")); print(d.get("NATURE_URL","")); title=d.get("NATURE_TITLE","Nature Break"); snip=d.get("NATURE_SNIPPET","60 seconds of calm"); print(f"üåä <b>{title}</b>\n<i>{snip}</i>")')
          THUMB="${L[0]}"; URL="${L[1]}"; CAPTION="${L[*]:2}"
          if [ -n "$THUMB" ] && [ -n "$URL" ]; then
            curl -s "https://api.telegram.org/bot${TG_TOKEN}/sendPhoto" \
              -F chat_id="${TG_CHAT}" \
              -F photo="${THUMB}" \
              -F parse_mode="HTML" \
              -F caption="$CAPTION" \
              -F reply_markup='{"inline_keyboard":[[{"text":"‚ñ∂Ô∏è Watch on YouTube","url":"'"$URL"'"}]]}'
          elif [ -n "$URL" ]; then
            curl -s -X POST "https://api.telegram.org/bot${TG_TOKEN}/sendMessage" \
              -d chat_id="${TG_CHAT}" \
              -d text="$URL" \
              -d disable_web_page_preview=false
          else
            echo "No nature URL in daily.json ‚Äî skipping card."
          fi

      # ========== TEST ==========
      - name: Send text (TEST)
        if: ${{ inputs.send_to_test == true }}
        env:
          TG_TOKEN: ${{ secrets.TELEGRAM_TOKEN_TEST }}
          TG_CHAT:  ${{ secrets.CHANNEL_ID_TEST }}
        run: |
          set -euo pipefail
          if [ -z "${TG_CHAT}" ]; then echo "TEST chat id is empty"; exit 1; fi
          curl -s -X POST "https://api.telegram.org/bot${TG_TOKEN}/sendMessage" \
            -d chat_id="${TG_CHAT}" -d parse_mode="HTML" \
            --data-urlencode text@"world_en/message.txt"

      - name: Send Nature card (TEST)
        if: ${{ inputs.send_to_test == true }}
        env:
          TG_TOKEN: ${{ secrets.TELEGRAM_TOKEN_TEST }}
          TG_CHAT:  ${{ secrets.CHANNEL_ID_TEST }}
        run: |
          set -euo pipefail
          mapfile -t L < <(python -c 'import json; d=json.load(open("world_en/daily.json",encoding="utf-8")); print(d.get("NATURE_THUMB","")); print(d.get("NATURE_URL","")); title=d.get("NATURE_TITLE","Nature Break"); snip=d.get("NATURE_SNIPPET","60 seconds of calm"); print(f"üåä <b>{title}</b>\n<i>{snip}</i>")')
          THUMB="${L[0]}"; URL="${L[1]}"; CAPTION="${L[*]:2}"
          if [ -z "${TG_CHAT}" ]; then echo "TEST chat id is empty"; exit 1; fi
          if [ -n "$THUMB" ] && [ -n "$URL" ]; then
            curl -s "https://api.telegram.org/bot${TG_TOKEN}/sendPhoto" \
              -F chat_id="${TG_CHAT}" \
              -F photo="${THUMB}" \
              -F parse_mode="HTML" \
              -F caption="$CAPTION" \
              -F reply_markup='{"inline_keyboard":[[{"text":"‚ñ∂Ô∏è Watch on YouTube","url":"'"$URL"'"}]]}'
          elif [ -n "$URL" ]; then
            curl -s -X POST "https://api.telegram.org/bot${TG_TOKEN}/sendMessage" \
              -d chat_id="${TG_CHAT}" \
              -d text="$URL" \
              -d disable_web_page_preview=false
          else
            echo "No nature URL in daily.json ‚Äî skipping card."
          fi
