name: world-daily-en

on:
  schedule:
    - cron: "15 7 * * *"   # 07:15 UTC
  workflow_dispatch:
    inputs:
      send_to_test:
        type: boolean
        description: "Send to TEST channel instead of main"
        default: false

jobs:
  run:
    runs-on: ubuntu-latest
    env:
      TZ: UTC
      PYTHONPATH: ${{ github.workspace }}

    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install deps
        run: pip install requests jinja2 pytz astral

      - name: Collect daily
        env:
          YT_API_KEY:            ${{ secrets.YT_API_KEY }}
          YT_CHANNEL_ID:         ${{ secrets.YT_CHANNEL_ID }}
          YOUTUBE_PLAYLIST_IDS:  ${{ secrets.YOUTUBE_PLAYLIST_IDS }}
          FALLBACK_NATURE_LIST:  ${{ secrets.FALLBACK_NATURE_LIST }}
        run: |
          set -euo pipefail
          python world_en/world_collect.py
          echo "---- ls world_en ----"; ls -la world_en || true
          test -f world_en/daily.json || { echo "ERROR: world_en/daily.json missing"; exit 1; }
          echo "WROTE daily.json, first 400 bytes ↓"
          head -c 400 world_en/daily.json || true
          echo

      - name: Render
        run: python world_en/render.py world_en/templates/daily_en.j2 world_en/daily.json > world_en/message.txt

      - name: Ensure daily.json exists
        run: test -f world_en/daily.json || { echo "daily.json missing"; exit 1; }

      # ========== MAIN channel ==========
      - name: Send text (MAIN)
        if: ${{ inputs.send_to_test != true }}
        env:
          TG_TOKEN: ${{ secrets.TELEGRAM_BOT_TOKEN_EN }}
          TG_CHAT:  ${{ secrets.TELEGRAM_CHAT_ID_EN }}
        run: |
          curl -s -X POST "https://api.telegram.org/bot${TG_TOKEN}/sendMessage" \
            -d chat_id="${TG_CHAT}" -d parse_mode="HTML" \
            --data-urlencode text@"world_en/message.txt"

      - name: Send Nature card (MAIN)
        if: ${{ inputs.send_to_test != true }}
        env:
          TG_TOKEN: ${{ secrets.TELEGRAM_BOT_TOKEN_EN }}
          TG_CHAT:  ${{ secrets.TELEGRAM_CHAT_ID_EN }}
        run: |
          set -euo pipefail
          # Read fields from daily.json (robust to missing keys)
          readarray -t L < <(python - <<'PY'
          import json
          d=json.load(open('world_en/daily.json',encoding='utf-8'))
          print(d.get('NATURE_THUMB',''))
          print(d.get('NATURE_URL',''))
          title=d.get('NATURE_TITLE','Nature Break')
          snip =d.get('NATURE_SNIPPET','60 seconds of calm')
          print(f"🌊 <b>{title}</b>\n<i>{snip}</i>")
          PY
          )
          THUMB="${L[0]}"; URL="${L[1]}"; CAPTION="${L[*]:2}"

          if [ -n "$THUMB" ] && [ -n "$URL" ]; then
            # Photo card with inline button (как в weekly)
            curl -s "https://api.telegram.org/bot${TG_TOKEN}/sendPhoto" \
              -F chat_id="${TG_CHAT}" \
              -F photo="${THUMB}" \
              -F parse_mode="HTML" \
              -F caption="$CAPTION" \
              -F reply_markup='{"inline_keyboard":[[{"text":"▶️ Watch on YouTube","url":"'"$URL"'"}]]}'
          elif [ -n "$URL" ]; then
            # Fallback: big preview for the link
            payload=$(jq -n --arg chat "$TG_CHAT" --arg text "$URL" \
              '{chat_id:$chat,text:$text,link_preview_options:{is_disabled:false,prefer_large_media:true,show_above_text:false}}')
            curl -sS -H 'Content-Type: application/json' \
                 -d "$payload" \
                 "https://api.telegram.org/bot${TG_TOKEN}/sendMessage" >/dev/null
          else
            echo "No nature URL in daily.json — skipping card."
          fi

      # ========== TEST channel ==========
      - name: Send text (TEST)
        if: ${{ inputs.send_to_test == true }}
        env:
          TG_TOKEN: ${{ secrets.TELEGRAM_TOKEN_TEST }}
          TG_CHAT:  ${{ secrets.CHANNEL_ID_TEST }}
        run: |
          if [ -z "${TG_CHAT}" ]; then echo "TEST chat id is empty"; exit 1; fi
          curl -s -X POST "https://api.telegram.org/bot${TG_TOKEN}/sendMessage" \
            -d chat_id="${TG_CHAT}" -d parse_mode="HTML" \
            --data-urlencode text@"world_en/message.txt"

      - name: Send Nature card (TEST)
        if: ${{ inputs.send_to_test == true }}
        env:
          TG_TOKEN: ${{ secrets.TELEGRAM_TOKEN_TEST }}
          TG_CHAT:  ${{ secrets.CHANNEL_ID_TEST }}
        run: |
          set -euo pipefail
          readarray -t L < <(python - <<'PY'
          import json
          d=json.load(open('world_en/daily.json',encoding='utf-8'))
          print(d.get('NATURE_THUMB',''))
          print(d.get('NATURE_URL',''))
          title=d.get('NATURE_TITLE','Nature Break')
          snip =d.get('NATURE_SNIPPET','60 seconds of calm')
          print(f"🌊 <b>{title}</b>\n<i>{snip}</i>")
          PY
          )
          THUMB="${L[0]}"; URL="${L[1]}"; CAPTION="${L[*]:2}"

          if [ -z "${TG_CHAT}" ]; then echo "TEST chat id is empty"; exit 1; fi
          if [ -n "$THUMB" ] && [ -n "$URL" ]; then
            curl -s "https://api.telegram.org/bot${TG_TOKEN}/sendPhoto" \
              -F chat_id="${TG_CHAT}" \
              -F photo="${THUMB}" \
              -F parse_mode="HTML" \
              -F caption="$CAPTION" \
              -F reply_markup='{"inline_keyboard":[[{"text":"▶️ Watch on YouTube","url":"'"$URL"'"}]]}'
          elif [ -n "$URL" ]; then
            payload=$(jq -n --arg chat "$TG_CHAT" --arg text "$URL" \
              '{chat_id:$chat,text:$text,link_preview_options:{is_disabled:false,prefer_large_media:true,show_above_text:false}}')
            curl -sS -H 'Content-Type: application/json' \
                 -d "$payload" \
                 "https://api.telegram.org/bot${TG_TOKEN}/sendMessage" >/dev/null
          else
            echo "No nature URL in daily.json — skipping card."
          fi