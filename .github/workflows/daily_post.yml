name: Daily VayboMeter (CY)

on:
  schedule:
    # Вечерний пост: 15:00 UTC
    - cron: '0 15 * * *'
    # Курсы валют в полдень МСК: 09:00 UTC = 12:00 МСК
    - cron: '0 9 * * *'
  workflow_dispatch:
    inputs:
      run_evening:
        description: "Запустить вечерний пост"
        default: "true"
        required: false
      run_noon_fx:
        description: "Запустить пост только с курсами"
        default: "false"
        required: false
      work_date:
        description: "Переопределить дату (YYYY-MM-DD)"
        required: false
      to_test:
        description: "Публиковать в тестовый канал?"
        type: boolean
        default: false
        required: false
      channel_override:
        description: "Явный chat_id канала (перебивает параметры выше)"
        required: false

permissions:
  contents: read

concurrency:
  group: daily-post-cy
  cancel-in-progress: false

env:
  # КИПРСКИЕ секреты
  TELEGRAM_TOKEN:   ${{ secrets.TELEGRAM_TOKEN }}
  CHANNEL_ID:       ${{ secrets.CHANNEL_ID }}
  CHANNEL_ID_TEST:  ${{ secrets.CHANNEL_ID_TEST }}
  # опц. явная переадресация канала из inputs
  CHANNEL_ID_OVERRIDE: ${{ github.event.inputs.channel_override }}
  # LLM/флаги/таймзона
  OPENAI_API_KEY:   ${{ secrets.OPENAI_API_KEY }}
  GEMINI_API_KEY:   ${{ secrets.GEMINI_API_KEY }}
  GROQ_API_KEY:     ${{ secrets.GROQ_API_KEY }}
  GEN_SKIP_SHORT: "1"
  DISABLE_LLM_DAILY: "0"
  TZ: Asia/Nicosia
  WORK_DATE: ${{ github.event.inputs.work_date }}
  TO_TEST:   ${{ github.event.inputs.to_test }}

jobs:
  evening:
    name: Evening post (for tomorrow)
    runs-on: ubuntu-latest
    if: >
      (github.event_name == 'schedule' && github.event.schedule == '0 15 * * *') ||
      (github.event_name == 'workflow_dispatch' &&
       (!github.event.inputs.run_evening || github.event.inputs.run_evening == 'true'))
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-python@v5
        with:
          python-version: '3.11'
          cache: 'pip'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Post daily (announce tomorrow)
        shell: bash
        run: |
          python <<'PY'
          import os, runpy, sys, pendulum

          # Патч today()/now() при ручной дате
          wd = (os.getenv("WORK_DATE") or "").strip()
          if wd:
              def _fake_today(tz=None):
                  dt = pendulum.parse(wd)
                  return dt.in_tz(tz) if tz else dt
              pendulum.today = _fake_today
              pendulum.now   = _fake_today

          # Определяем канал доставки:
          # 1) channel_override → прямой chat_id
          # 2) to_test=true     → подставляем CHANNEL_ID_TEST в CHANNEL_ID (post.py читает CHANNEL_ID)
          chat_override = (os.getenv("CHANNEL_ID_OVERRIDE") or "").strip()
          if chat_override:
              os.environ["CHANNEL_ID"] = chat_override
          else:
              to_test = (os.getenv("TO_TEST","").strip().lower() in ("1","true","yes","on"))
              if to_test:
                  test_id = (os.getenv("CHANNEL_ID_TEST") or "").strip()
                  if test_id:
                      os.environ["CHANNEL_ID"] = test_id

          # Запуск
          sys.argv = ["post.py"]
          runpy.run_path("post.py", run_name="__main__")
          PY

  noon_fx:
    name: Noon FX only (12:00 MSK)
    runs-on: ubuntu-latest
    if: >
      (github.event_name == 'schedule' && github.event.schedule == '0 9 * * *') ||
      (github.event_name == 'workflow_dispatch' && github.event.inputs.run_noon_fx == 'true')
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-python@v5
        with:
          python-version: '3.11'
          cache: 'pip'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Post FX only (12:00 MSK)
        shell: bash
        run: |
          python <<'PY'
          import os, runpy, sys, pendulum

          wd = (os.getenv("WORK_DATE") or "").strip()
          if wd:
              def _fake_today(tz=None):
                  dt = pendulum.parse(wd)
                  return dt.in_tz(tz) if tz else dt
              pendulum.today = _fake_today
              pendulum.now   = _fake_today

          chat_override = (os.getenv("CHANNEL_ID_OVERRIDE") or "").strip()
          if chat_override:
              os.environ["CHANNEL_ID"] = chat_override
          else:
              to_test = (os.getenv("TO_TEST","").strip().lower() in ("1","true","yes","on"))
              if to_test:
                  test_id = (os.getenv("CHANNEL_ID_TEST") or "").strip()
                  if test_id:
                      os.environ["CHANNEL_ID"] = test_id

          # Если post.py поддерживает --fx-only — передадим; иначе просто запуск
          args = ["post.py", "--fx-only"]
          sys.argv = args
          try:
              runpy.run_path("post.py", run_name="__main__")
          except SystemExit:
              raise
          except Exception:
              # fallback: без флага
              sys.argv = ["post.py"]
              runpy.run_path("post.py", run_name="__main__")
          PY
