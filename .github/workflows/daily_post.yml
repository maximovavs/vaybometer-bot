name: Daily post (Cyprus)

on:
  schedule:
    - cron: "10 3 * * *"
  workflow_dispatch:
    inputs:
      dry_run:
        description: "Dry-run (не отправлять в канал)"
        required: true
        default: true
        type: boolean
      work_date:
        description: "Дата для фиксации today/now (YYYY-MM-DD, локальная Asia/Nicosia). Пусто — реальная дата"
        required: false
        type: string
      for_tomorrow:
        description: "Пост на завтра (добавить +1 день к базовой дате)"
        required: false
        default: true
        type: boolean
      to_test:
        description: "Публиковать в тестовый канал"
        required: false
        default: true
        type: boolean
      channel_id_override:
        description: "Явный chat_id канала (перебивает всё)"
        required: false
        type: string
      gen_skip_short:
        description: "Пропускать короткие посты (GEN_SKIP_SHORT=1)"
        required: false
        default: true
        type: boolean
      disable_llm_daily:
        description: "Отключить ежедневный LLM (DISABLE_LLM_DAILY=1)"
        required: false
        default: false
        type: boolean

concurrency:
  group: daily-cyprus
  cancel-in-progress: true

env:
  TZ: Asia/Nicosia

jobs:
  smoke:
    name: Smoke (syntax only)
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install deps (light, if any)
        shell: bash
        run: |
          python -m pip install --upgrade pip
          if [ -f requirements.txt ]; then pip install -r requirements.txt; else echo "No requirements.txt"; fi

      - name: Syntax check (compile only existing files)
        shell: bash
        run: |
          set -e
          SHOPT=$(shopt -p nullglob || true); shopt -s nullglob
          CAND=(post.py post_common.py *.py scripts/*.py tools/*.py)
          FILES=()
          for f in "${CAND[@]}"; do [ -f "$f" ] && FILES+=("$f"); done
          $SHOPT || true
          if [ ${#FILES[@]} -gt 0 ]; then
            echo "Compiling: ${FILES[*]}"
            python -m py_compile "${FILES[@]}"
          else
            echo "No Python files to compile."
          fi

  daily:
    name: Run daily post
    needs: smoke
    runs-on: ubuntu-latest
    permissions:
      contents: read
    env:
      TELEGRAM_TOKEN:   ${{ secrets.TELEGRAM_TOKEN }}
      CHANNEL_ID:       ${{ secrets.CHANNEL_ID }}
      CHANNEL_ID_TEST:  ${{ secrets.CHANNEL_ID_TEST }}
      OPENAI_API_KEY:   ${{ secrets.OPENAI_API_KEY }}
      GEMINI_API_KEY:   ${{ secrets.GEMINI_API_KEY }}
      GROQ_API_KEY:     ${{ secrets.GROQ_API_KEY }}
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-python@v5
        with:
          python-version: "3.11"
          cache: "pip"

      - name: Install dependencies (safe)
        shell: bash
        run: |
          python -m pip install --upgrade pip
          if [ -f requirements.txt ]; then pip install -r requirements.txt; else echo "No requirements.txt"; fi

      - name: Export input flags to env (dispatch only)
        if: ${{ github.event_name == 'workflow_dispatch' }}
        shell: bash
        run: |
          echo "WORK_DATE=${{ inputs.work_date }}" >> $GITHUB_ENV
          echo "CHANNEL_ID_OVERRIDE=${{ inputs.channel_id_override }}" >> $GITHUB_ENV
          echo "TO_TEST=${{ inputs.to_test && '1' || '' }}" >> $GITHUB_ENV
          echo "FOR_TOMORROW=${{ inputs.for_tomorrow && '1' || '' }}" >> $GITHUB_ENV
          echo "GEN_SKIP_SHORT=${{ inputs.gen_skip_short && '1' || '' }}" >> $GITHUB_ENV
          echo "DISABLE_LLM_DAILY=${{ inputs.disable_llm_daily && '1' || '' }}" >> $GITHUB_ENV
          echo "DRY_RUN=${{ inputs.dry_run && 'true' || 'false' }}" >> $GITHUB_ENV

      - name: Run post.py (safe args)
        shell: bash
        env:
          DRY_RUN: ${{ env.DRY_RUN || 'false' }}
        run: |
          if [ ! -f post.py ]; then
            echo "post.py not found, nothing to run."
            exit 0
          fi

          ARGS=()
          if [ "${{ github.event_name }}" = "workflow_dispatch" ]; then
            if [ "${{ inputs.to_test }}" = "true" ] && [ -n "${CHANNEL_ID_TEST}" ]; then
              ARGS+=(--test)
            fi
            if [ "${{ inputs.dry_run }}" = "true" ]; then
              ARGS+=(--dry-run)
            fi
            # Переопределение chat_id при необходимости — поддерживается только если post.py умеет.
            if [ -n "${CHANNEL_ID_OVERRIDE}" ]; then
              ARGS+=(--chat-id "${CHANNEL_ID_OVERRIDE}")
            fi
          fi

          echo "Running: python post.py ${ARGS[*]}"
          python post.py "${ARGS[@]}"
