name: Daily VayboMeter (Cyprus)

on:
  schedule:
    # Вечерний пост: 14:00 UTC (≈17:00 на Кипре летом / 16:00 зимой)
    - cron: '0 14 * * *'
    # Курсы валют в полдень МСК: 09:00 UTC = 12:00 МСК
    - cron: '0 9 * * *'
  workflow_dispatch:
    inputs:
      run_evening:
        description: "Запустить вечерний пост"
        type: boolean
        default: true
        required: false
      run_noon_fx:
        description: "Запустить пост только с курсами"
        type: boolean
        default: false
        required: false
      work_date:
        description: "Переопределить дату (YYYY-MM-DD)"
        required: false
      to_test:
        description: "Публиковать в тестовый канал?"
        type: boolean
        default: false
        required: false
      channel_override:
        description: "Явный chat_id канала (перебивает параметры выше)"
        required: false

permissions:
  contents: read

concurrency:
  group: daily-post-cy
  cancel-in-progress: false

# общие переменные окружения
env:
  TELEGRAM_TOKEN: ${{ secrets.TELEGRAM_TOKEN }}
  CHANNEL_ID:         ${{ secrets.CHANNEL_ID }}
  CHANNEL_ID_TEST:    ${{ secrets.CHANNEL_ID_TEST }}
  CHANNEL_ID_OVERRIDE: ${{ github.event.inputs.channel_override }}
  OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
  GEMINI_API_KEY: ${{ secrets.GEMINI_API_KEY }}
  GROQ_API_KEY:   ${{ secrets.GROQ_API_KEY }}
  GEN_SKIP_SHORT: "1"
  DISABLE_LLM_DAILY: "0"
  TZ: Asia/Nicosia
  WORK_DATE: ${{ github.event.inputs.work_date }}
  TO_TEST:   ${{ github.event.inputs.to_test }}

jobs:
  evening:
    name: Evening post (for tomorrow)
    runs-on: ubuntu-latest
    if: >
      (github.event_name == 'schedule' && github.event.schedule == '0 14 * * *') ||
      (github.event_name == 'workflow_dispatch' &&
       (github.event.inputs.run_evening == true || github.event.inputs.run_evening == 'true' || !github.event.inputs.run_evening))
    steps:
      - uses: actions/checkout@v4

      - name: Time debug
        run: |
          echo "UTC:   $(date -u)"
          echo "Local: $(date)"
          echo "MSK:   $(TZ=Europe/Moscow date)"

      - uses: actions/setup-python@v5
        with:
          python-version: '3.11'
          cache: 'pip'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Post daily (announce tomorrow)
        shell: bash
        run: |
          python <<'PY'
          import os, runpy, sys, pendulum
          wd = os.getenv("WORK_DATE")
          if wd:
              def _fake_today(tz=None):
                  dt = pendulum.parse(wd)
                  return dt.in_tz(tz) if tz else dt
              pendulum.today = _fake_today

          args = ["post_cy.py"]
          chat_override = (os.getenv("CHANNEL_ID_OVERRIDE") or "").strip()
          if chat_override:
              args += ["--chat-id", chat_override]
          else:
              to_test = (os.getenv("TO_TEST","").strip().lower() in ("1","true","yes","on"))
              if to_test:
                  args.append("--to-test")

          sys.argv = args
          runpy.run_path("post_cy.py", run_name="__main__")
          PY

  noon_fx:
    name: Noon FX only (12:00 MSK)
    runs-on: ubuntu-latest
    if: >
      (github.event_name == 'schedule' && github.event.schedule == '0 9 * * *') ||
      (github.event_name == 'workflow_dispatch' &&
       (github.event.inputs.run_noon_fx == true || github.event.inputs.run_noon_fx == 'true'))
    steps:
      - uses: actions/checkout@v4

      - name: Time debug
        run: |
          echo "UTC:   $(date -u)"
          echo "Local: $(date)"
          echo "MSK:   $(TZ=Europe/Moscow date)"

      - uses: actions/setup-python@v5
        with:
          python-version: '3.11'
          cache: 'pip'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Post FX only (12:00 MSK)
        shell: bash
        run: |
          python <<'PY'
          import os, runpy, sys, pendulum
          wd = os.getenv("WORK_DATE")
          if wd:
              def _fake_today(tz=None):
                  dt = pendulum.parse(wd)
                  return dt.in_tz(tz) if tz else dt
              pendulum.today = _fake_today

          args = ["post_cy.py", "--fx-only"]
          chat_override = (os.getenv("CHANNEL_ID_OVERRIDE") or "").strip()
          if chat_override:
              args += ["--chat-id", chat_override]
          else:
              to_test = (os.getenv("TO_TEST","").strip().lower() in ("1","true","yes","on"))
              if to_test:
                  args.append("--to-test")

          sys.argv = args
          runpy.run_path("post_cy.py", run_name="__main__")
          PY