name: Daily post (Cyprus)

on:
  schedule:
    # запусти по крону, подстрой под себя (время в UTC).
    - cron: "10 3 * * *"
  workflow_dispatch:
    inputs:
      work_date:
        description: "Дата для фиксации today/now (YYYY-MM-DD, локальная Asia/Nicosia). Пусто — реальная дата"
        required: false
        type: string
      for_tomorrow:
        description: "Пост на завтра (добавить +1 день к базовой дате)"
        required: false
        default: true
        type: boolean
      to_test:
        description: "Публиковать в тестовый канал"
        required: false
        default: true
        type: boolean
      channel_id_override:
        description: "Явный chat_id канала (перебивает всё)"
        required: false
        type: string
      gen_skip_short:
        description: "Пропускать короткие посты (GEN_SKIP_SHORT=1)"
        required: false
        default: true
        type: boolean
      disable_llm_daily:
        description: "Отключить ежедневный LLM (DISABLE_LLM_DAILY=1)"
        required: false
        default: false
        type: boolean

concurrency:
  group: daily-cyprus
  cancel-in-progress: true

env:
  TZ: Asia/Nicosia

jobs:
  smoke:
    name: Smoke (syntax only)
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: "3.11"
      - name: Install deps (light)
        run: |
          python -m pip install --upgrade pip
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
      - name: Syntax check
        run: |
          python -m py_compile post.py post_common.py

  daily:
    name: Run daily post
    needs: smoke
    runs-on: ubuntu-latest
    permissions:
      contents: read
    env:
      # секреты кипрского репозитория
      TELEGRAM_TOKEN:   ${{ secrets.TELEGRAM_TOKEN }}
      CHANNEL_ID:       ${{ secrets.CHANNEL_ID }}
      CHANNEL_ID_TEST:  ${{ secrets.CHANNEL_ID_TEST }}
      OPENAI_API_KEY:   ${{ secrets.OPENAI_API_KEY }}
      GEMINI_API_KEY:   ${{ secrets.GEMINI_API_KEY }}
      GROQ_API_KEY:     ${{ secrets.GROQ_API_KEY }}
      # если используете ключи для погоды/радиации — раскомментируйте:
      # OWM_KEY:          ${{ secrets.OWM_KEY }}
      # METEO_KEY:        ${{ secrets.METEO_KEY }}

    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-python@v5
        with:
          python-version: "3.11"
          cache: "pip"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Export input flags to env
        run: |
          # передаём «ручные» параметры в окружение
          echo "WORK_DATE=${{ inputs.work_date }}" >> $GITHUB_ENV
          echo "CHANNEL_ID_OVERRIDE=${{ inputs.channel_id_override }}" >> $GITHUB_ENV
          echo "TO_TEST=${{ inputs.to_test && '1' || '' }}" >> $GITHUB_ENV
          echo "FOR_TOMORROW=${{ inputs.for_tomorrow && '1' || '' }}" >> $GITHUB_ENV
          echo "GEN_SKIP_SHORT=${{ inputs.gen_skip_short && '1' || '' }}" >> $GITHUB_ENV
          echo "DISABLE_LLM_DAILY=${{ inputs.disable_llm_daily && '1' || '' }}" >> $GITHUB_ENV

      - name: Run post.py (with date/now patch, to_test & override)
        shell: bash
        run: |
          python <<'PY'
          import os, sys, runpy, pendulum

          # Патч today()/now() на заданную дату (если WORK_DATE != "")
          class _TodayPatch:
              def __init__(self, date_str: str|None): self.date_str = (date_str or "").strip()
              def __enter__(self):
                  if not self.date_str: return
                  self._old_today = pendulum.today
                  self._old_now   = pendulum.now
                  def _fake_base(tz=None):
                      dt = pendulum.parse(self.date_str)
                      return dt.in_tz(tz) if tz else dt
                  pendulum.today = _fake_base
                  pendulum.now   = _fake_base
              def __exit__(self, *a):
                  if not self.date_str: return
                  pendulum.today = self._old_today
                  pendulum.now   = self._old_now

          args = ["post.py"]
          if os.getenv("FOR_TOMORROW","") in ("1","true","yes","on"):
              args.append("--for-tomorrow")

          # приоритет явного chat_id
          chat_override = (os.getenv("CHANNEL_ID_OVERRIDE") or "").strip()
          if chat_override:
              args += ["--chat-id", chat_override]
          else:
              # иначе — to_test → тестовый канал
              if (os.getenv("TO_TEST","").strip().lower() in ("1","true","yes","on")):
                  args.append("--to-test")

          sys.argv = args

          print(f"INFO: date base = {os.getenv('WORK_DATE') or 'real-time'}; args:", args)
          with _TodayPatch(os.getenv("WORK_DATE")):
              runpy.run_path("post.py", run_name="__main__")
          PY
