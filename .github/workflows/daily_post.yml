# .github/workflows/daily_post.yml
name: Daily VayboMeter (Cyprus)

on:
  schedule:
    - cron: "10 3 * * *"
  workflow_dispatch:
    inputs:
      run_daily:
        description: "Запустить дневной пост"
        default: "true"
        required: false
      work_date:
        description: "Переопределить дату (YYYY-MM-DD, локальная Asia/Nicosia)"
        required: false
      to_test:
        description: "Публиковать в тестовый канал?"
        type: boolean
        default: false
        required: false
      channel_override:
        description: "Явный chat_id канала (перебивает параметры выше)"
        required: false
      dry_run:
        description: "Dry-run (печать без отправки)"
        type: boolean
        default: true
        required: false

permissions:
  contents: read

concurrency:
  group: daily-post-cy
  cancel-in-progress: true

env:
  TELEGRAM_TOKEN:   ${{ secrets.TELEGRAM_TOKEN }}
  CHANNEL_ID:       ${{ secrets.CHANNEL_ID }}
  CHANNEL_ID_TEST:  ${{ secrets.CHANNEL_ID_TEST }}
  OPENAI_API_KEY:   ${{ secrets.OPENAI_API_KEY }}
  GEMINI_API_KEY:   ${{ secrets.GEMINI_API_KEY }}
  GROQ_API_KEY:     ${{ secrets.GROQ_API_KEY }}
  TZ: Asia/Nicosia
  WORK_DATE: ${{ github.event.inputs.work_date }}
  TO_TEST:   ${{ github.event.inputs.to_test }}
  CHANNEL_ID_OVERRIDE: ${{ github.event.inputs.channel_override }}
  DRY_RUN:   ${{ github.event.inputs.dry_run }}

jobs:
  smoke:
    name: Smoke (syntax only)
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: "3.11"
      - name: Compile only existing *.py
        shell: bash
        run: |
          set -e
          shopt -s nullglob
          files=(post.py post_common.py *.py scripts/*.py tools/*.py)
          if [ ${#files[@]} -gt 0 ]; then
            python -m py_compile "${files[@]}"
          else
            echo "No python files"
          fi

  daily:
    name: Daily post
    needs: smoke
    runs-on: ubuntu-latest
    if: >
      (github.event_name == 'schedule') ||
      (github.event_name == 'workflow_dispatch' &&
       (!github.event.inputs.run_daily || github.event.inputs.run_daily == 'true'))
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: "3.11"
          cache: "pip"
      - name: Install requirements if present
        shell: bash
        run: |
          python -m pip install --upgrade pip
          if [ -f requirements.txt ]; then pip install -r requirements.txt; else echo "no requirements.txt"; fi

      - name: Run post.py
        shell: bash
        run: |
          if [ ! -f post.py ]; then
            echo "post.py not found"; exit 0
          fi
          python <<'PY'
          import os, sys, runpy, pendulum

          # Патч today()/now() при ручной дате
          wd = (os.getenv("WORK_DATE") or "").strip()
          if wd:
              tz = pendulum.timezone(os.getenv("TZ","Asia/Nicosia"))
              def _fake(_tz=None):
                  dt = pendulum.parse(wd)
                  return dt.in_tz(_tz or tz)
              pendulum.today = _fake
              pendulum.now   = _fake

          args = ["post.py"]
          # KLD-совместимые флаги
          chat_override = (os.getenv("CHANNEL_ID_OVERRIDE") or "").strip()
          if chat_override:
              args += ["--chat-id", chat_override]
          else:
              to_test = (os.getenv("TO_TEST","").strip().lower() in ("1","true","yes","on"))
              if to_test:
                  args.append("--to-test")

          if (os.getenv("DRY_RUN","").strip().lower() in ("1","true","yes","on")):
              args.append("--dry-run")

          print("Running:", " ".join(["python"]+args))
          sys.argv = args
          runpy.run_path("post.py", run_name="__main__")
          PY
