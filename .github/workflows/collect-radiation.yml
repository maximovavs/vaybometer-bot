name: Collect radiation (Safecast)

on:
  workflow_dispatch: {}
  schedule:
    # каждые 30 минут (UTC). При необходимости поменяйте частоту
    - cron: "*/30 * * * *"

permissions:
  contents: write  # нужен авто-коммиту

concurrency:
  group: collect-radiation
  cancel-in-progress: true

jobs:
  collect:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install deps
        run: |
          set -e
          if [ -f requirements.txt ]; then
            pip install -r requirements.txt
          else
            pip install pendulum requests
          fi

      # Главный шаг: до 3 попыток, поиск разных путей, срезаем возможный CR (\r)
      - name: Run collector with retry
        uses: nick-fields/retry@v3
        with:
          max_attempts: 3
          timeout_minutes: 10
          warning_on_retry: true
          continue_on_error: false
          command: |
            set -e
            cd "${GITHUB_WORKSPACE:?}"
            echo "***"
            ls -la

            # до 3 попыток найти и запустить любой из известных скриптов-сборщиков
            for attempt in 1 2 3; do
              echo "::group::Attempt ${attempt}"
              for raw in \
                "collectors/radiation_collect.py" \
                "radiation_collect.py" \
                "scripts/collect_radiation.py"
              do
                # срезаем неожиданный CR из CRLF
                s="${raw%$'\r'}"
                if [ -f "$s" ]; then
                  echo "Running: $s"
                  # На всякий случай уберём CR в самом файле (без зависимости от dos2unix)
                  perl -i -pe 's/\r$//' "$s"
                  if python "$s"; then
                    echo "::endgroup::"
                    exit 0   # успех — выходим
                  else
                    echo "Collector failed (attempt ${attempt})."
                  fi
                fi
              done
              echo "::endgroup::"
              echo "Sleeping 10s before next attempt…"
              sleep 10
            done

            echo "No collector script found in known locations."
            exit 1

      - name: Show produced data files
        run: |
          set -e
          if [ -d data ]; then
            echo "data/ contents:"
            ls -la data
            # для удобства логов — покажем начало и конец файла, если он есть
            if [ -f data/safecast_cy.json ]; then
              echo "Head of data/safecast_cy.json:"
              head -n 5 data/safecast_cy.json || true
              echo "Tail of data/safecast_cy.json:"
              tail -n 5 data/safecast_cy.json || true
            fi
          else
            echo "No data/ directory created."
          fi

      - name: Auto-commit updated JSON
        uses: stefanzweifel/git-auto-commit-action@v5
        with:
          commit_message: "chore(data): update Safecast radiation"
          file_pattern: |
            data/*.json
            radiation_hourly.json
          commit_user_name: github-actions
          commit_user_email: actions@github.com
          commit_author: github-actions <actions@github.com>
