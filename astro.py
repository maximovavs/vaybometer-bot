#!/usr/bin/env python3
# -*- coding: utf-8 -*-

"""
astro.py

‚Ä¢ –ò–∫–æ–Ω–∫–∏ —Ñ–∞–∑ –õ—É–Ω—ã MOON_ICONS (–æ—Ç –Ω–æ–≤–æ–ª—É–Ω–∏—è –¥–æ –ø–æ–ª–Ω–æ–ª—É–Ω–∏—è).
‚Ä¢ –§—É–Ω–∫—Ü–∏—è upcoming_event(days=3) –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –ø—Ä–µ–¥–∞–Ω–æ–Ω—Å (–ø—Ä–∏–º–µ—Ä).
‚Ä¢ astro_events() ‚Üí —Å–ø–∏—Å–æ–∫ –∞–∫—Ç—É–∞–ª—å–Ω—ã—Ö –∞—Å—Ç—Ä–æ—Å–æ–±—ã—Ç–∏–π + –æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω—ã–π –ø—Ä–µ–¥–∞–Ω–æ–Ω—Å.
"""

import math
import datetime as dt
from typing import List, Optional

import swisseph as swe

# –ó–Ω–∞–∫–∏ –∑–æ–¥–∏–∞–∫–∞ –∏ –∏—Ö –≤–ª–∏—è–Ω–∏–µ
SIGNS = [
    "–û–≤–Ω–µ", "–¢–µ–ª—å—Ü–µ", "–ë–ª–∏–∑–Ω–µ—Ü–∞—Ö", "–†–∞–∫–µ", "–õ—å–≤–µ", "–î–µ–≤–µ",
    "–í–µ—Å–∞—Ö", "–°–∫–æ—Ä–ø–∏–æ–Ω–µ", "–°—Ç—Ä–µ–ª—å—Ü–µ", "–ö–æ–∑–µ—Ä–æ–≥–µ", "–í–æ–¥–æ–ª–µ–µ", "–†—ã–±–∞—Ö",
]
EFFECT = [
    "—Ñ–æ–∫—É—Å–∏—Ä—É–µ—Ç –Ω–∞ –¥–µ–ª–µ",
    "–¥–∞—Ä–∏—Ç —Å—Ç—Ä–∞–Ω–Ω—ã–µ –∏–¥–µ–∏",
    "—É—Å–∏–ª–∏–≤–∞–µ—Ç —ç–º–ø–∞—Ç–∏—é",
    "–ø—Ä–∏–¥–∞—ë—Ç —Å–º–µ–ª–æ—Å—Ç–∏",
    "–Ω–∞—Å—Ç—Ä–∞–∏–≤–∞–µ—Ç –Ω–∞ –∫–æ–º—Ñ–æ—Ä—Ç",
    "–ø–æ–≤—ã—à–∞–µ—Ç –∫–æ–º–º—É–Ω–∏–∫–∞–±–µ–ª—å–Ω–æ—Å—Ç—å",
    "—É—Å–∏–ª–∏–≤–∞–µ—Ç –∑–∞–±–æ—Ç—É",
    "—Ä–∞–∑–∂–∏–≥–∞–µ—Ç —Ç–≤–æ—Ä—á–µ—Å–∫–∏–π –æ–≥–æ–Ω—å",
    "–Ω–∞—Å—Ç—Ä–∞–∏–≤–∞–µ—Ç –Ω–∞ –ø–æ—Ä—è–¥–æ–∫",
    "–∑–∞—Å—Ç–∞–≤–ª—è–µ—Ç –∏—Å–∫–∞—Ç—å –±–∞–ª–∞–Ω—Å",
    "–ø–æ–¥–Ω–∏–º–∞–µ—Ç —Å—Ç—Ä–∞—Å—Ç—å",
    "—Ç–æ–ª–∫–∞–µ—Ç –∫ –ø—Ä–∏–∫–ª—é—á–µ–Ω–∏—è–º",
]

# –ò–∫–æ–Ω–∫–∏ —Ñ–∞–∑ –õ—É–Ω—ã –æ—Ç –Ω–æ–≤–æ–π –¥–æ –ø–æ—Å–ª–µ–¥–Ω–µ–π
MOON_ICONS = "üåëüåíüåìüåîüåïüåñüåóüåò"


def moon_phase() -> str:
    """
    –í—ã—á–∏—Å–ª—è–µ—Ç —Ç–µ–∫—É—â—É—é –ª—É–Ω–Ω—É—é —Ñ–∞–∑—É, –ø—Ä–æ—Ü–µ–Ω—Ç –æ—Å–≤–µ—â—ë–Ω–Ω–æ—Å—Ç–∏ –∏ –∑–Ω–∞–∫ –õ—É–Ω—ã.
    –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å—Ç—Ä–æ–∫—É –≤–∏–¥–∞:
        "<icon> <–ù–∞–∑–≤–∞–Ω–∏–µ —Ñ–∞–∑—ã> –≤ <–ó–Ω–∞–∫> (<%> –æ—Å–≤–µ—â.) ‚Äî <–≠—Ñ—Ñ–µ–∫—Ç>"
    """
    # —é–ª–∏–∞–Ω—Å–∫–∞—è –¥–∞—Ç–∞ —Ç–µ–∫—É—â–µ–≥–æ –¥–Ω—è UTC
    now = dt.datetime.utcnow()
    jd = swe.julday(now.year, now.month, now.day)
    sun_lon = swe.calc_ut(jd, swe.SUN)[0][0]
    moon_lon = swe.calc_ut(jd, swe.MOON)[0][0]

    # —Ñ–∞–∑–æ–≤—ã–π —É–≥–æ–ª [0,1)
    phase = ((moon_lon - sun_lon + 360) % 360) / 360
    illum = round(abs(math.cos(math.pi * phase)) * 100)

    # –≤—ã–±–æ—Ä –∏–∫–æ–Ω–∫–∏ –∏ –Ω–∞–∑–≤–∞–Ω–∏—è —Ñ–∞–∑—ã
    icon = MOON_ICONS[int(phase * len(MOON_ICONS)) % len(MOON_ICONS)]
    if illum < 5:
        name = "–ù–æ–≤–æ–ª—É–Ω–∏–µ"
    elif phase < 0.5:
        name = "–†–∞—Å—Ç—É—â–∞—è –õ—É–Ω–∞"
    elif illum > 95:
        name = "–ü–æ–ª–Ω–æ–ª—É–Ω–∏–µ"
    else:
        name = "–£–±—ã–≤–∞—é—â–∞—è –õ—É–Ω–∞"

    # –∑–Ω–∞–∫ –ø–æ –¥–æ–ª–≥–æ—Ç–µ –õ—É–Ω—ã
    sign = SIGNS[int(moon_lon // 30) % 12]

    return f"{icon} {name} –≤ {sign} ({illum}% –æ—Å–≤–µ—â.) ‚Äî {EFFECT[int(moon_lon // 30) % 12]}"


def planet_parade() -> Optional[str]:
    """
    –ü—Ä–æ–≤–µ—Ä—è–µ—Ç, –µ—Å—Ç—å –ª–∏ –º–∏–Ω–∏-–ø–∞—Ä–∞–¥ –∏–∑ —Ç—Ä—ë—Ö –ø–ª–∞–Ω–µ—Ç –≤ —Å–µ–∫—Ç–æ—Ä–µ < 90¬∞.
    –ï—Å–ª–∏ –µ—Å—Ç—å ‚Äî –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç "–ú–∏–Ω–∏-–ø–∞—Ä–∞–¥ –ø–ª–∞–Ω–µ—Ç", –∏–Ω–∞—á–µ None.
    """
    now = dt.datetime.utcnow()
    jd = swe.julday(now.year, now.month, now.day)
    planets = [swe.MERCURY, swe.VENUS, swe.MARS, swe.JUPITER, swe.SATURN]
    lons = sorted(swe.calc_ut(jd, p)[0][0] for p in planets)
    # –º–∏–Ω–∏–º–∞–ª—å–Ω—ã–π —Ä–∞–∑–±—Ä–æ—Å —Ç—Ä—ë—Ö –ø–æ–¥—Ä—è–¥ –∏–¥—É—â–∏—Ö
    for i in range(len(lons) - 2):
        span = (lons[i+2] - lons[i]) % 360
        if span < 90:
            return "–ú–∏–Ω–∏-–ø–∞—Ä–∞–¥ –ø–ª–∞–Ω–µ—Ç"
    return None


def eta_aquarids() -> Optional[str]:
    """
    –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å–æ–±—ã—Ç–∏–µ –º–µ—Ç–µ–æ—Ä–Ω–æ–≥–æ –ø–æ—Ç–æ–∫–∞ Eta Aquarids,
    –µ—Å–ª–∏ —Ç–µ–∫—É—â–∏–π –¥–µ–Ω—å –≥–æ–¥–∞ –≤ –¥–∏–∞–ø–∞–∑–æ–Ω–µ 120‚Äì140 (–ø—Ä–∏–º–µ—Ä–Ω–æ –º–∞–π).
    """
    doy = dt.datetime.utcnow().timetuple().tm_yday
    if 120 <= doy <= 140:
        return "Eta Aquarids (–º–µ—Ç–µ–æ—Ä—ã)"
    return None


def upcoming_event(days: int = 3) -> Optional[str]:
    """
    –ó–∞–≥–ª—É—à–∫–∞ –¥–ª—è –ø—Ä–µ–¥—Å—Ç–æ—è—â–µ–≥–æ –∞—Å—Ç—Ä–æ–ª–æ–≥–∏—á–µ—Å–∫–æ–≥–æ —Å–æ–±—ã—Ç–∏—è —á–µ—Ä–µ–∑ –∑–∞–¥–∞–Ω–Ω–æ–µ
    –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –¥–Ω–µ–π. –°–µ–π—á–∞—Å –¥–ª—è days==3 –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –ø—Ä–∏–º–µ—Ä.
    """
    if days == 3:
        return "–ß–µ—Ä–µ–∑ 3 –¥–Ω—è —á–∞—Å—Ç–Ω–æ–µ —Å–æ–ª–Ω–µ—á–Ω–æ–µ –∑–∞—Ç–º–µ–Ω–∏–µ"
    return None


def astro_events() -> List[str]:
    """
    –°–æ–±–∏—Ä–∞–µ—Ç —Å–ø–∏—Å–æ–∫ –∞—Å—Ç—Ä–æ–ª–æ–≥–∏—á–µ—Å–∫–∏—Ö —Å–æ–±—ã—Ç–∏–π:
      1) —Ç–µ–∫—É—â–∞—è –ª—É–Ω–Ω–∞—è —Ñ–∞–∑–∞
      2) –º–∏–Ω–∏-–ø–∞—Ä–∞–¥ –ø–ª–∞–Ω–µ—Ç (–µ—Å–ª–∏ –µ—Å—Ç—å)
      3) Eta Aquarids (–µ—Å–ª–∏ –∏–¥—ë—Ç)
      4) –ø—Ä–µ–¥–∞–Ω–æ–Ω—Å upcoming_event()
    """
    ev: List[str] = []
    ev.append(moon_phase())
    if p := planet_parade():
        ev.append(p)
    if m := eta_aquarids():
        ev.append(m)
    if ann := upcoming_event():
        ev.append(ann)
    return ev
