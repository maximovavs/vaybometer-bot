import os
import asyncio
from telegram import Bot
from openai import OpenAI


PROMPT_TEMPLATE = """
–°–æ—Å—Ç–∞–≤—å –ª–∞–∫–æ–Ω–∏—á–Ω—ã–π –µ–∂–µ–¥–Ω–µ–≤–Ω—ã–π –¥–∞–π–¥–∂–µ—Å—Ç –¥–ª—è –∂–∏—Ç–µ–ª–µ–π –õ–∏–º–∞—Å—Å–æ–ª–∞ (–ö–∏–ø—Ä) –Ω–∞ —Å–µ–≥–æ–¥–Ω—è.
–ò—Å–ø–æ–ª—å–∑—É–π –°–¢–†–û–ì–û –≠–¢–£ HTML-—Å—Ç—Ä—É–∫—Ç—É—Ä—É:

<b>‚òÄÔ∏è –ü–æ–≥–æ–¥–∞</b><br>
–¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞: ‚Ä¶<br>
–û–±–ª–∞—á–Ω–æ—Å—Ç—å: ‚Ä¶<br>
–û—Å–∞–¥–∫–∏: ‚Ä¶<br>
–í–µ—Ç–µ—Ä: ‚Ä¶<br><br>

<b>üå¨Ô∏è –ö–∞—á–µ—Å—Ç–≤–æ –≤–æ–∑–¥—É—Ö–∞</b><br>
–ò–Ω–¥–µ–∫—Å –∫–∞—á–µ—Å—Ç–≤–∞ –≤–æ–∑–¥—É—Ö–∞ (AQI): ‚Ä¶<br>
PM2.5: ‚Ä¶<br>
PM10: ‚Ä¶<br>
–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π: ‚Ä¶<br><br>

<b>üåø –£—Ä–æ–≤–µ–Ω—å –ø—ã–ª—å—Ü—ã</b><br>
–î–µ—Ä–µ–≤—å—è: ‚Ä¶<br>
–¢—Ä–∞–≤—ã: ‚Ä¶<br>
–ê–º–±—Ä–æ–∑–∏—è: ‚Ä¶<br>
–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π: ‚Ä¶<br><br>

<b>üåå –ì–µ–æ–º–∞–≥–Ω–∏—Ç–Ω–∞—è –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å</b><br>
–£—Ä–æ–≤–µ–Ω—å: ‚Ä¶<br>
–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π: ‚Ä¶<br><br>

<b>üìà –†–µ–∑–æ–Ω–∞–Ω—Å –®—É–º–∞–Ω–∞</b><br>
–§–æ–Ω–æ–≤–∞—è —á–∞—Å—Ç–æ—Ç–∞: ‚Ä¶<br>
–ê–º–ø–ª–∏—Ç—É–¥–∞: ‚Ä¶<br><br>

<b>üåä –¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞ –≤–æ–¥—ã –≤ –º–æ—Ä–µ</b><br>
–°–µ–π—á–∞—Å: ‚Ä¶<br>
–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π: ‚Ä¶<br><br>

<b>üîÆ –ê—Å—Ç—Ä–æ–ª–æ–≥–∏—á–µ—Å–∫–∏–µ —Å–æ–±—ã—Ç–∏—è</b><br>
–°–æ–±—ã—Ç–∏–µ 1: ‚Ä¶<br>
–°–æ–±—ã—Ç–∏–µ 2: ‚Ä¶<br><br>
<hr>

<b>‚úÖ –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏</b><br>
‚Äì ‚Ä¶<br>
‚Äì ‚Ä¶<br>
‚Äì ‚Ä¶<br>

–ó–∞–∫–∞–Ω—á–∏–≤–∞–π –º–æ—Ç–∏–≤–∏—Ä—É—é—â–µ–π —Ñ—Ä–∞–∑–æ–π ¬´–ë—É–¥—å—Ç–µ –Ω–∞ –≤–æ–ª–Ω–µ –∏ —Å–ª—É—à–∞–π—Ç–µ —Å–≤–æ—ë —Ç–µ–ª–æ!¬ª.
–ù–∏–∫–∞–∫–∏—Ö –ª–∏—à–Ω–∏—Ö —Ç–µ–≥–æ–≤, —Ç–æ–ª—å–∫–æ —Ç–µ, —á—Ç–æ –≤ —à–∞–±–ª–æ–Ω–µ. –î–∞–Ω–Ω—ã–µ –∑–∞–ø–æ–ª–Ω–∏ –∞–∫—Ç—É–∞–ª—å–Ω—ã–º–∏
—á–∏—Å–ª–∞–º–∏, –≥–¥–µ —É–º–µ—Å—Ç–Ω–æ ‚Äî –¥–∏–∞–ø–∞–∑–æ–Ω, –≥–¥–µ –Ω–µ—Ç –¥–∞–Ω–Ω—ã—Ö ‚Äî –ø–∏—à–∏ ¬´–Ω–µ—Ç –¥–∞–Ω–Ω—ã—Ö¬ª.
"""

def fetch_digest() -> str:
    client = OpenAI(api_key=os.environ["OPENAI_API_KEY"])
    resp = client.chat.completions.create(
        model="gpt-4o-mini",
        messages=[{"role": "user", "content": PROMPT_TEMPLATE}],
        temperature=0.7,
    )
    return resp.choices[0].message.content.strip()


async def post_to_telegram(text: str) -> None:
    bot = Bot(token=os.environ["TELEGRAM_TOKEN"])
    await bot.send_message(
        chat_id=os.environ["CHANNEL_ID"],
        text=text,
        parse_mode="HTML",                 # <<< –∫–ª—é—á–µ–≤–æ–π –º–æ–º–µ–Ω—Ç
        disable_web_page_preview=True,
    )


async def main() -> None:
    digest = fetch_digest()
    await post_to_telegram(digest)


if __name__ == "__main__":
    asyncio.run(main())
