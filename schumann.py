#!/usr/bin/env python3
# -*- coding: utf-8 -*-

"""
schumann.py

‚Ä¢ SCH_QUOTES —Ä–∞—Å—à–∏—Ä–µ–Ω –¥–æ 7 –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤.
‚Ä¢ get_schumann() –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å–ª–æ–≤–∞—Ä—å:
    - {"freq": float, "amp": float, "high": bool}
      –∫–æ–≥–¥–∞ –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—É—á–µ–Ω—ã –∏ freq > 8 –ì—Ü ‚Üí high=True
    - {"freq": float, "amp": float, "high": False}
      –∫–æ–≥–¥–∞ freq ‚â§ 8 –ì—Ü
    - {"msg": str}
      –∫–æ–≥–¥–∞ –æ–±–∞ –∏—Å—Ç–æ—á–Ω–∏–∫–∞ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω—ã ‚Üí —é–º–æ—Ä–∏—Å—Ç–∏—á–µ—Å–∫–∞—è –∑–∞–≥–ª—É—à–∫–∞
"""

import logging
import random
from typing import Dict, Any, Optional

from utils import _get

SCH_QUOTES = [
    "–¥–∞—Ç—á–∏–∫–∏ –º–æ–ª—á–∞—Ç ‚Äî —Ä–µ—Ç—Ä–∏—Ç üå±",
    "–∫–æ—à–∞—á–∏–π –º—è—É-—Ñ–∞–∫—Ç–æ—Ä –∑–∞–≥–ª—É—à–∏–ª —Å–µ–Ω—Å–æ—Ä—ã üò∏",
    "–≤–æ–ª–Ω—ã —É—à–ª–∏ –ª–æ–≤–∏—Ç—å —á–∞–µ–∫ üê¶",
    "–ø–æ–∫–∞–∑–∞–Ω–∏—è –º–µ–¥–∏—Ç–∏—Ä—É—é—Ç üßò",
    "–¥–∞–Ω–Ω—ã–µ –≤ –æ—Ç–ø—É—Å–∫–µ üèùÔ∏è",
    "–®—É–º–∞–Ω —Å–ø–∏—Ç ‚Äî –Ω–µ –±—É–¥–∏–º üîï",
    "—Ç–∏—à–∏–Ω–∞ –≤ —ç—Ñ–∏—Ä–µ‚Ä¶ üéß",
]

def get_schumann() -> Dict[str, Any]:
    """
    –ü—ã—Ç–∞–µ—Ç—Å—è –ø–æ–ª—É—á–∏—Ç—å —Ç–µ–∫—É—â–∏–µ –ø–æ–∫–∞–∑–∞–Ω–∏—è —Ä–µ–∑–æ–Ω–∞–Ω—Å–∞ –®—É–º–∞–Ω–∞
    –∏–∑ –¥–≤—É—Ö —ç–Ω–¥–ø–æ–∏–Ω—Ç–æ–≤. –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç:
      ‚Ä¢ {"freq": float, "amp": float, "high": bool}
      ‚Ä¢ –∏–ª–∏ {"msg": str} –ø—Ä–∏ –æ—à–∏–±–∫–∞—Ö –≤—Å–µ—Ö –∏—Å—Ç–æ—á–Ω–∏–∫–æ–≤.
    """
    for url in (
        "https://api.glcoherence.org/v1/earth",
        "https://gci-api.ucsd.edu/data/latest",
    ):
        j = _get(url)
        if not j:
            continue

        try:
            # –≤—Ç–æ—Ä–æ–π —Å–µ—Ä–≤–∏—Å –æ–±–æ—Ä–∞—á–∏–≤–∞–µ—Ç –¥–∞–Ω–Ω—ã–µ –≤ j["data"]["sr1"]
            if "data" in j:
                j = j["data"]["sr1"]
            # –∫–ª—é—á–∏ –º–æ–≥—É—Ç –Ω–∞–∑—ã–≤–∞—Ç—å—Å—è frequency_1 –∏–ª–∏ frequency, amplitude_1 –∏–ª–∏ amplitude
            freq = j.get("frequency_1") or j.get("frequency")
            amp  = j.get("amplitude_1")  or j.get("amplitude")

            if freq is None or amp is None:
                raise ValueError("missing fields")

            freq_val = float(freq)
            amp_val  = float(amp)
            return {
                "freq": freq_val,
                "amp":  amp_val,
                "high": freq_val > 8.0,   # ‚ö°Ô∏è –ø–æ–≤—ã—à–µ–Ω–Ω—ã–µ –≤–∏–±—Ä–∞—Ü–∏–∏
            }
        except Exception as e:
            logging.warning("get_schumann(%s) parse error: %s", url, e)
            continue

    # –æ–±–∞ –∏—Å—Ç–æ—á–Ω–∏–∫–∞ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω—ã ‚Äî —à—É—Ç–æ—á–Ω—ã–π –∑–∞–≥–ª—É—à–∫–∞
    return {"msg": random.choice(SCH_QUOTES)}
